commit 11c7a6b83a96187b109dba7a88f8540d40770d68
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Sun Jan 12 16:04:15 2025 +0100

    Alarma en node, creo que funciona

diff --git a/lib/scheduler.js b/lib/scheduler.js
new file mode 100644
index 0000000..d93f5c4
--- /dev/null
+++ b/lib/scheduler.js
@@ -0,0 +1,35 @@
+const { exec } = require('child_process');
+const openwhisk = require('openwhisk');
+
+const options = {
+    apihost: 'http://host.docker.internal:3233',
+    api_key: '23bc46b1-71f6-4ed5-8c54-816aa4f8c502:123zO3xZCLrMN6v2BKK1dXYFpXlPkccOFqm12CdAsMgRU4VrNZ9lyGVCGuMDGIwP',
+    namespace: '_',
+    ignore_certs: true,
+};
+
+const ow = openwhisk(options);
+
+async function main() {
+    try {
+        await ow.actions.invoke({ 
+            name: 'lib/runtime',
+            blocking: true
+        });
+        setTimeout(() => {
+            exec('node scheduler.js', (error, stdout, stderr) => {
+                if (error) {
+                    console.error(`Error en la auto-invocación: ${error}`);
+                    return;
+                }
+            });
+        }, 120000);
+
+    } catch (error) {
+        console.error('Error al invocar las acciones:', error);
+    }
+}
+
+main();
+
+module.exports.main = main;
\ No newline at end of file
diff --git a/manifest.yaml b/manifest.yaml
index 209f27f..fb1cf32 100644
--- a/manifest.yaml
+++ b/manifest.yaml
@@ -23,3 +23,6 @@ project:
         listProducts:
           location: dist/listProducts.js
           runtime: nodejs:default
+        scheduler:
+          location: dist/scheduler.js
+          runtime: nodejs:default
diff --git a/webpack.config.js b/webpack.config.js
index fc4e8e3..bc11d42 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -10,6 +10,7 @@ module.exports = {
         runtime: './lib/runtime.js',
         deleteProduct: './lib/deleteProduct.js',
         listProducts: './lib/listProducts.js',
+        scheduler: './lib/scheduler.js',
     },
     output: {
         path: path.resolve(__dirname, 'dist'),

commit c4ecdf0a11a47e2987cec1569429c11adb9da2b0
Author: Jefferson Caiza <jpcaijam@upv.edu.es>
Date:   Sat Jan 11 23:52:40 2025 +0100

    telegram notifications

diff --git a/lib/enviarNotificacion.js b/lib/enviarNotificacion.js
index b5f5c57..8670821 100644
--- a/lib/enviarNotificacion.js
+++ b/lib/enviarNotificacion.js
@@ -1,29 +1,22 @@
-async function main(params) {
-    if (!params || !params.mensaje) {
+const TelegramBot = require('node-telegram-bot-api');
+
+
+const token = '7486238554:AAHbk6TqVY6VOIksC3EnaJfqN233N9VZQ84'
+const chatId = '6963596982';
+function main(params) {
+
+    if (!params || !params.mensaje || !params.userId) {
         console.error('Usage: node enviarNotificacion.js <mensaje>');
-        return { error: 'Missing required parameters' }; 
-    }
-    const {mensaje} = params;
-    const webhookUrl = 'localhost';
-
-    try {
-        /*const response = await fetch(webhookUrl, {
-            method: 'POST',
-            headers: {
-                'Content-Type': 'application/json',
-            },
-            body: JSON.stringify({
-                content: mensaje
-            })
-        });
-        if (!response.ok) {
-            throw new Error(`Error HTTP: ${response.status}`);
-        }*/
-        return {mensaje: mensaje};
-    } catch (error) {
-        console.error('Error al enviar notificación a openwhisk:', error);
-        return {mensaje: 'Error al enviar notificación a openwhisk'};
+        return { error: 'Missing required parameters' };
     }
+
+
+    const bot = new TelegramBot(token, { polling: true });
+
+    bot.sendMessage(chatId, "Notificación desde openwhisk: " + params.mensaje);
+
+    return { mensaje: 'Notificación enviada' };
+
 }
 
 module.exports.main = main;
diff --git a/package-lock.json b/package-lock.json
index 6cc342f..e1dff2f 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -12,10 +12,70 @@
         "cheerio": "^1.0.0",
         "mongodb": "^6.3.0",
         "node-fetch": "^2.7.0",
+        "node-telegram-bot-api": "^0.66.0",
         "openwhisk": "^3.21.8",
         "pg": "^8.13.1"
       }
     },
+    "node_modules/@cypress/request": {
+      "version": "3.0.7",
+      "resolved": "https://registry.npmjs.org/@cypress/request/-/request-3.0.7.tgz",
+      "integrity": "sha512-LzxlLEMbBOPYB85uXrDqvD4MgcenjRBLIns3zyhx7vTPj/0u2eQhzXvPiGcaJrV38Q9dbkExWp6cOHPJ+EtFYg==",
+      "dependencies": {
+        "aws-sign2": "~0.7.0",
+        "aws4": "^1.8.0",
+        "caseless": "~0.12.0",
+        "combined-stream": "~1.0.6",
+        "extend": "~3.0.2",
+        "forever-agent": "~0.6.1",
+        "form-data": "~4.0.0",
+        "http-signature": "~1.4.0",
+        "is-typedarray": "~1.0.0",
+        "isstream": "~0.1.2",
+        "json-stringify-safe": "~5.0.1",
+        "mime-types": "~2.1.19",
+        "performance-now": "^2.1.0",
+        "qs": "6.13.1",
+        "safe-buffer": "^5.1.2",
+        "tough-cookie": "^5.0.0",
+        "tunnel-agent": "^0.6.0",
+        "uuid": "^8.3.2"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/@cypress/request-promise": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/@cypress/request-promise/-/request-promise-5.0.0.tgz",
+      "integrity": "sha512-eKdYVpa9cBEw2kTBlHeu1PP16Blwtum6QHg/u9s/MoHkZfuo1pRGka1VlUHXF5kdew82BvOJVVGk0x8X0nbp+w==",
+      "dependencies": {
+        "bluebird": "^3.5.0",
+        "request-promise-core": "1.1.3",
+        "stealthy-require": "^1.1.1",
+        "tough-cookie": "^4.1.3"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      },
+      "peerDependencies": {
+        "@cypress/request": "^3.0.0"
+      }
+    },
+    "node_modules/@cypress/request-promise/node_modules/tough-cookie": {
+      "version": "4.1.4",
+      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-4.1.4.tgz",
+      "integrity": "sha512-Loo5UUvLD9ScZ6jh8beX1T6sO1w2/MpCRpEP7V280GKMVUQ0Jzar2U3UJPsrdbziLEMMhu3Ujnq//rhiFuIeag==",
+      "dependencies": {
+        "psl": "^1.1.33",
+        "punycode": "^2.1.1",
+        "universalify": "^0.2.0",
+        "url-parse": "^1.5.3"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/@mongodb-js/saslprep": {
       "version": "1.1.9",
       "resolved": "https://registry.npmjs.org/@mongodb-js/saslprep/-/saslprep-1.1.9.tgz",
@@ -40,6 +100,89 @@
         "@types/webidl-conversions": "*"
       }
     },
+    "node_modules/ajv": {
+      "version": "6.12.6",
+      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
+      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
+      "peer": true,
+      "dependencies": {
+        "fast-deep-equal": "^3.1.1",
+        "fast-json-stable-stringify": "^2.0.0",
+        "json-schema-traverse": "^0.4.1",
+        "uri-js": "^4.2.2"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/epoberezkin"
+      }
+    },
+    "node_modules/array-buffer-byte-length": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.2.tgz",
+      "integrity": "sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "is-array-buffer": "^3.0.5"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.findindex": {
+      "version": "2.2.4",
+      "resolved": "https://registry.npmjs.org/array.prototype.findindex/-/array.prototype.findindex-2.2.4.tgz",
+      "integrity": "sha512-LLm4mhxa9v8j0A/RPnpQAP4svXToJFh+Hp1pNYl5ZD5qpB4zdx/D4YjpVcETkhFbUKWO3iGMVLvrOnnmkAJT6A==",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.3",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.6",
+        "es-object-atoms": "^1.0.0",
+        "es-shim-unscopables": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/arraybuffer.prototype.slice": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.4.tgz",
+      "integrity": "sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==",
+      "dependencies": {
+        "array-buffer-byte-length": "^1.0.1",
+        "call-bind": "^1.0.8",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.5",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.6",
+        "is-array-buffer": "^3.0.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/asn1": {
+      "version": "0.2.6",
+      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.6.tgz",
+      "integrity": "sha512-ix/FxPn0MDjeyJ7i/yoHGFt/EX6LyNbxSEhPPXODPL+KB0VPk86UYfL0lMdy+KCnv+fmvIzySwaK5COwqVbWTQ==",
+      "dependencies": {
+        "safer-buffer": "~2.1.0"
+      }
+    },
+    "node_modules/assert-plus": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
+      "integrity": "sha512-NfJ4UzBCcQGLDlQq7nHxH+tv3kyZ0hHQqF5BO6J7tNJeP5do1llPr8dZ8zHonfhAu0PHAdMkSo+8o0wxg9lZWw==",
+      "engines": {
+        "node": ">=0.8"
+      }
+    },
     "node_modules/async-retry": {
       "version": "1.3.3",
       "resolved": "https://registry.npmjs.org/async-retry/-/async-retry-1.3.3.tgz",
@@ -48,6 +191,60 @@
         "retry": "0.13.1"
       }
     },
+    "node_modules/asynckit": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
+      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q=="
+    },
+    "node_modules/available-typed-arrays": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
+      "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
+      "dependencies": {
+        "possible-typed-array-names": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/aws-sign2": {
+      "version": "0.7.0",
+      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
+      "integrity": "sha512-08kcGqnYf/YmjoRhfxyu+CLxBjUtHLXLXX/vUfx9l2LYzG3c1m61nrpyFUZI6zeS+Li/wWMMidD9KgrqtGq3mA==",
+      "engines": {
+        "node": "*"
+      }
+    },
+    "node_modules/aws4": {
+      "version": "1.13.2",
+      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.13.2.tgz",
+      "integrity": "sha512-lHe62zvbTB5eEABUVi/AwVh0ZKY9rMMDhmm+eeyuuUQbQ3+J+fONVQOZyj+DdrvD4BY33uYniyRJ4UJIaSKAfw=="
+    },
+    "node_modules/bcrypt-pbkdf": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
+      "integrity": "sha512-qeFIXtP4MSoi6NLqO12WfqARWWuCKi2Rn/9hJLEmtB5yTNr9DqFWkJRCf2qShWzPeAMRnOgCrq0sg/KLv5ES9w==",
+      "dependencies": {
+        "tweetnacl": "^0.14.3"
+      }
+    },
+    "node_modules/bl": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/bl/-/bl-1.2.3.tgz",
+      "integrity": "sha512-pvcNpa0UU69UT341rO6AYy4FVAIkUHuZXRIWbq+zHnsVcRzDDjIAhGuuYoi0d//cwIwtt4pkpKycWEfjdV+vww==",
+      "dependencies": {
+        "readable-stream": "^2.3.5",
+        "safe-buffer": "^5.1.1"
+      }
+    },
+    "node_modules/bluebird": {
+      "version": "3.7.2",
+      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz",
+      "integrity": "sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg=="
+    },
     "node_modules/boolbase": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
@@ -63,6 +260,55 @@
         "node": ">=16.20.1"
       }
     },
+    "node_modules/call-bind": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz",
+      "integrity": "sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.0",
+        "es-define-property": "^1.0.0",
+        "get-intrinsic": "^1.2.4",
+        "set-function-length": "^1.2.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/call-bind-apply-helpers": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.1.tgz",
+      "integrity": "sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "function-bind": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/call-bound": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.3.tgz",
+      "integrity": "sha512-YTd+6wGlNlPxSuri7Y6X8tY2dmm12UMH66RpKMhiX6rsk5wXXnYgbUcOt8kiS31/AjfoTOvCsE+w8nZQLQnzHA==",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.1",
+        "get-intrinsic": "^1.2.6"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/caseless": {
+      "version": "0.12.0",
+      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
+      "integrity": "sha512-4tYFyifaFfGacoiObjJegolkwSU4xQNGbVgUiNYVUxbQ2x2lUsFvY4hVgVzGiIe6WLOPqycWXA40l+PWsxthUw=="
+    },
     "node_modules/cheerio": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/cheerio/-/cheerio-1.0.0.tgz",
@@ -105,6 +351,22 @@
         "url": "https://github.com/sponsors/fb55"
       }
     },
+    "node_modules/combined-stream": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
+      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
+      "dependencies": {
+        "delayed-stream": "~1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/core-util-is": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
+      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ=="
+    },
     "node_modules/css-select": {
       "version": "5.1.0",
       "resolved": "https://registry.npmjs.org/css-select/-/css-select-5.1.0.tgz",
@@ -133,6 +395,113 @@
         "url": "https://github.com/sponsors/fb55"
       }
     },
+    "node_modules/dashdash": {
+      "version": "1.14.1",
+      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
+      "integrity": "sha512-jRFi8UDGo6j+odZiEpjazZaWqEal3w/basFjQHQEwVtZJGDpxbH1MeYluwCS8Xq5wmLJooDlMgvVarmWfGM44g==",
+      "dependencies": {
+        "assert-plus": "^1.0.0"
+      },
+      "engines": {
+        "node": ">=0.10"
+      }
+    },
+    "node_modules/data-view-buffer": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.2.tgz",
+      "integrity": "sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "es-errors": "^1.3.0",
+        "is-data-view": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/data-view-byte-length": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.2.tgz",
+      "integrity": "sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "es-errors": "^1.3.0",
+        "is-data-view": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/inspect-js"
+      }
+    },
+    "node_modules/data-view-byte-offset": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.1.tgz",
+      "integrity": "sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "es-errors": "^1.3.0",
+        "is-data-view": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/debug": {
+      "version": "3.2.7",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
+      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
+      "dependencies": {
+        "ms": "^2.1.1"
+      }
+    },
+    "node_modules/define-data-property": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
+      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
+      "dependencies": {
+        "es-define-property": "^1.0.0",
+        "es-errors": "^1.3.0",
+        "gopd": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/define-properties": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
+      "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
+      "dependencies": {
+        "define-data-property": "^1.0.1",
+        "has-property-descriptors": "^1.0.0",
+        "object-keys": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/delayed-stream": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
+      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
     "node_modules/dom-serializer": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-2.0.0.tgz",
@@ -188,6 +557,28 @@
         "url": "https://github.com/fb55/domutils?sponsor=1"
       }
     },
+    "node_modules/dunder-proto": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
+      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.1",
+        "es-errors": "^1.3.0",
+        "gopd": "^1.2.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/ecc-jsbn": {
+      "version": "0.1.2",
+      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
+      "integrity": "sha512-eh9O+hwRHNbG4BLTjEl3nw044CkGm5X6LoaCf7LPp7UU8Qrt47JYNi6nPX8xjW97TKGKm1ouctg0QSpZe9qrnw==",
+      "dependencies": {
+        "jsbn": "~0.1.0",
+        "safer-buffer": "^2.1.0"
+      }
+    },
     "node_modules/encoding-sniffer": {
       "version": "0.2.0",
       "resolved": "https://registry.npmjs.org/encoding-sniffer/-/encoding-sniffer-0.2.0.tgz",
@@ -201,6 +592,14 @@
         "url": "https://github.com/fb55/encoding-sniffer?sponsor=1"
       }
     },
+    "node_modules/end-of-stream": {
+      "version": "1.4.4",
+      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
+      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
+      "dependencies": {
+        "once": "^1.4.0"
+      }
+    },
     "node_modules/entities": {
       "version": "4.5.0",
       "resolved": "https://registry.npmjs.org/entities/-/entities-4.5.0.tgz",
@@ -213,108 +612,936 @@
         "url": "https://github.com/fb55/entities?sponsor=1"
       }
     },
-    "node_modules/htmlparser2": {
-      "version": "9.1.0",
-      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-9.1.0.tgz",
-      "integrity": "sha512-5zfg6mHUoaer/97TxnGpxmbR7zJtPwIYFMZ/H5ucTlPZhKvtum05yiPK3Mgai3a0DyVxv7qYqoweaEd2nrYQzQ==",
-      "funding": [
-        "https://github.com/fb55/htmlparser2?sponsor=1",
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/fb55"
-        }
-      ],
-      "license": "MIT",
+    "node_modules/es-abstract": {
+      "version": "1.23.9",
+      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.23.9.tgz",
+      "integrity": "sha512-py07lI0wjxAC/DcfK1S6G7iANonniZwTISvdPzk9hzeH0IZIshbuuFxLIU96OyF89Yb9hiqWn8M/bY83KY5vzA==",
       "dependencies": {
-        "domelementtype": "^2.3.0",
-        "domhandler": "^5.0.3",
-        "domutils": "^3.1.0",
-        "entities": "^4.5.0"
+        "array-buffer-byte-length": "^1.0.2",
+        "arraybuffer.prototype.slice": "^1.0.4",
+        "available-typed-arrays": "^1.0.7",
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.3",
+        "data-view-buffer": "^1.0.2",
+        "data-view-byte-length": "^1.0.2",
+        "data-view-byte-offset": "^1.0.1",
+        "es-define-property": "^1.0.1",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0",
+        "es-set-tostringtag": "^2.1.0",
+        "es-to-primitive": "^1.3.0",
+        "function.prototype.name": "^1.1.8",
+        "get-intrinsic": "^1.2.7",
+        "get-proto": "^1.0.0",
+        "get-symbol-description": "^1.1.0",
+        "globalthis": "^1.0.4",
+        "gopd": "^1.2.0",
+        "has-property-descriptors": "^1.0.2",
+        "has-proto": "^1.2.0",
+        "has-symbols": "^1.1.0",
+        "hasown": "^2.0.2",
+        "internal-slot": "^1.1.0",
+        "is-array-buffer": "^3.0.5",
+        "is-callable": "^1.2.7",
+        "is-data-view": "^1.0.2",
+        "is-regex": "^1.2.1",
+        "is-shared-array-buffer": "^1.0.4",
+        "is-string": "^1.1.1",
+        "is-typed-array": "^1.1.15",
+        "is-weakref": "^1.1.0",
+        "math-intrinsics": "^1.1.0",
+        "object-inspect": "^1.13.3",
+        "object-keys": "^1.1.1",
+        "object.assign": "^4.1.7",
+        "own-keys": "^1.0.1",
+        "regexp.prototype.flags": "^1.5.3",
+        "safe-array-concat": "^1.1.3",
+        "safe-push-apply": "^1.0.0",
+        "safe-regex-test": "^1.1.0",
+        "set-proto": "^1.0.0",
+        "string.prototype.trim": "^1.2.10",
+        "string.prototype.trimend": "^1.0.9",
+        "string.prototype.trimstart": "^1.0.8",
+        "typed-array-buffer": "^1.0.3",
+        "typed-array-byte-length": "^1.0.3",
+        "typed-array-byte-offset": "^1.0.4",
+        "typed-array-length": "^1.0.7",
+        "unbox-primitive": "^1.1.0",
+        "which-typed-array": "^1.1.18"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
       }
     },
-    "node_modules/iconv-lite": {
-      "version": "0.6.3",
-      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
-      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
-      "license": "MIT",
-      "dependencies": {
-        "safer-buffer": ">= 2.1.2 < 3.0.0"
-      },
+    "node_modules/es-define-property": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
+      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
       "engines": {
-        "node": ">=0.10.0"
+        "node": ">= 0.4"
       }
     },
-    "node_modules/memory-pager": {
-      "version": "1.5.0",
-      "resolved": "https://registry.npmjs.org/memory-pager/-/memory-pager-1.5.0.tgz",
-      "integrity": "sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg==",
-      "license": "MIT"
+    "node_modules/es-errors": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
+      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
+      "engines": {
+        "node": ">= 0.4"
+      }
     },
-    "node_modules/mongodb": {
-      "version": "6.12.0",
-      "resolved": "https://registry.npmjs.org/mongodb/-/mongodb-6.12.0.tgz",
-      "integrity": "sha512-RM7AHlvYfS7jv7+BXund/kR64DryVI+cHbVAy9P61fnb1RcWZqOW1/Wj2YhqMCx+MuYhqTRGv7AwHBzmsCKBfA==",
-      "license": "Apache-2.0",
+    "node_modules/es-object-atoms": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.0.0.tgz",
+      "integrity": "sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==",
       "dependencies": {
-        "@mongodb-js/saslprep": "^1.1.9",
-        "bson": "^6.10.1",
-        "mongodb-connection-string-url": "^3.0.0"
+        "es-errors": "^1.3.0"
       },
       "engines": {
-        "node": ">=16.20.1"
-      },
-      "peerDependencies": {
-        "@aws-sdk/credential-providers": "^3.188.0",
-        "@mongodb-js/zstd": "^1.1.0 || ^2.0.0",
-        "gcp-metadata": "^5.2.0",
-        "kerberos": "^2.0.1",
-        "mongodb-client-encryption": ">=6.0.0 <7",
-        "snappy": "^7.2.2",
-        "socks": "^2.7.1"
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-set-tostringtag": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
+      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.6",
+        "has-tostringtag": "^1.0.2",
+        "hasown": "^2.0.2"
       },
-      "peerDependenciesMeta": {
-        "@aws-sdk/credential-providers": {
-          "optional": true
-        },
-        "@mongodb-js/zstd": {
-          "optional": true
-        },
-        "gcp-metadata": {
-          "optional": true
-        },
-        "kerberos": {
-          "optional": true
-        },
-        "mongodb-client-encryption": {
-          "optional": true
-        },
-        "snappy": {
-          "optional": true
-        },
-        "socks": {
-          "optional": true
-        }
+      "engines": {
+        "node": ">= 0.4"
       }
     },
-    "node_modules/mongodb-connection-string-url": {
-      "version": "3.0.1",
-      "resolved": "https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-3.0.1.tgz",
-      "integrity": "sha512-XqMGwRX0Lgn05TDB4PyG2h2kKO/FfWJyCzYQbIhXUxz7ETt0I/FqHjUeqj37irJ+Dl1ZtU82uYyj14u2XsZKfg==",
-      "license": "Apache-2.0",
+    "node_modules/es-shim-unscopables": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.0.2.tgz",
+      "integrity": "sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==",
       "dependencies": {
-        "@types/whatwg-url": "^11.0.2",
-        "whatwg-url": "^13.0.0"
+        "hasown": "^2.0.0"
       }
     },
-    "node_modules/needle": {
-      "version": "3.3.1",
-      "resolved": "https://registry.npmjs.org/needle/-/needle-3.3.1.tgz",
-      "integrity": "sha512-6k0YULvhpw+RoLNiQCRKOl09Rv1dPLr8hHnVjHqdolKwDrdNyk+Hmrthi4lIGPPz3r39dLx0hsF5s40sZ3Us4Q==",
+    "node_modules/es-to-primitive": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.3.0.tgz",
+      "integrity": "sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==",
       "dependencies": {
-        "iconv-lite": "^0.6.3",
-        "sax": "^1.2.4"
+        "is-callable": "^1.2.7",
+        "is-date-object": "^1.0.5",
+        "is-symbol": "^1.0.4"
       },
-      "bin": {
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/eventemitter3": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-3.1.2.tgz",
+      "integrity": "sha512-tvtQIeLVHjDkJYnzf2dgVMxfuSGJeM/7UCG17TT4EumTfNtF+0nebF/4zWOIkCreAbtNqhGEboB6BWrwqNaw4Q=="
+    },
+    "node_modules/extend": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
+      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
+    },
+    "node_modules/extsprintf": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
+      "integrity": "sha512-11Ndz7Nv+mvAC1j0ktTa7fAb0vLyGGX+rMHNBYQviQDGU0Hw7lhctJANqbPhu9nV9/izT/IntTgZ7Im/9LJs9g==",
+      "engines": [
+        "node >=0.6.0"
+      ]
+    },
+    "node_modules/fast-deep-equal": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
+      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
+      "peer": true
+    },
+    "node_modules/fast-json-stable-stringify": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
+      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
+      "peer": true
+    },
+    "node_modules/file-type": {
+      "version": "3.9.0",
+      "resolved": "https://registry.npmjs.org/file-type/-/file-type-3.9.0.tgz",
+      "integrity": "sha512-RLoqTXE8/vPmMuTI88DAzhMYC99I8BWv7zYP4A1puo5HIjEJ5EX48ighy4ZyKMG9EDXxBgW6e++cn7d1xuFghA==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/for-each": {
+      "version": "0.3.3",
+      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz",
+      "integrity": "sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==",
+      "dependencies": {
+        "is-callable": "^1.1.3"
+      }
+    },
+    "node_modules/forever-agent": {
+      "version": "0.6.1",
+      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
+      "integrity": "sha512-j0KLYPhm6zeac4lz3oJ3o65qvgQCcPubiyotZrXqEaG4hNagNYO8qdlUrX5vwqv9ohqeT/Z3j6+yW067yWWdUw==",
+      "engines": {
+        "node": "*"
+      }
+    },
+    "node_modules/form-data": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.1.tgz",
+      "integrity": "sha512-tzN8e4TX8+kkxGPK8D5u0FNmjPUjw3lwC9lSLxxoB/+GtsJG91CO8bSWy73APlgAZzZbXEYZJuxjkHH2w+Ezhw==",
+      "dependencies": {
+        "asynckit": "^0.4.0",
+        "combined-stream": "^1.0.8",
+        "mime-types": "^2.1.12"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/function-bind": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
+      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/function.prototype.name": {
+      "version": "1.1.8",
+      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz",
+      "integrity": "sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.3",
+        "define-properties": "^1.2.1",
+        "functions-have-names": "^1.2.3",
+        "hasown": "^2.0.2",
+        "is-callable": "^1.2.7"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/functions-have-names": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
+      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/get-intrinsic": {
+      "version": "1.2.7",
+      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.7.tgz",
+      "integrity": "sha512-VW6Pxhsrk0KAOqs3WEd0klDiF/+V7gQOpAvY1jVU/LHmaD/kQO4523aiJuikX/QAKYiW6x8Jh+RJej1almdtCA==",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.1",
+        "es-define-property": "^1.0.1",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0",
+        "function-bind": "^1.1.2",
+        "get-proto": "^1.0.0",
+        "gopd": "^1.2.0",
+        "has-symbols": "^1.1.0",
+        "hasown": "^2.0.2",
+        "math-intrinsics": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/get-proto": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
+      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
+      "dependencies": {
+        "dunder-proto": "^1.0.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/get-symbol-description": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz",
+      "integrity": "sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.6"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/getpass": {
+      "version": "0.1.7",
+      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
+      "integrity": "sha512-0fzj9JxOLfJ+XGLhR8ze3unN0KZCgZwiSSDz168VERjK8Wl8kVSdcu2kspd4s4wtAa1y/qrVRiAA0WclVsu0ng==",
+      "dependencies": {
+        "assert-plus": "^1.0.0"
+      }
+    },
+    "node_modules/globalthis": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
+      "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
+      "dependencies": {
+        "define-properties": "^1.2.1",
+        "gopd": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/gopd": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
+      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/har-schema": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
+      "integrity": "sha512-Oqluz6zhGX8cyRaTQlFMPw80bSJVG2x/cFb8ZPhUILGgHka9SsokCCOQgpveePerqidZOrT14ipqfJb7ILcW5Q==",
+      "peer": true,
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/har-validator": {
+      "version": "5.1.5",
+      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
+      "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
+      "deprecated": "this library is no longer supported",
+      "peer": true,
+      "dependencies": {
+        "ajv": "^6.12.3",
+        "har-schema": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/has-bigints": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz",
+      "integrity": "sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-property-descriptors": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
+      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
+      "dependencies": {
+        "es-define-property": "^1.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-proto": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.2.0.tgz",
+      "integrity": "sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==",
+      "dependencies": {
+        "dunder-proto": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-symbols": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
+      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-tostringtag": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
+      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
+      "dependencies": {
+        "has-symbols": "^1.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/hasown": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
+      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
+      "dependencies": {
+        "function-bind": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/htmlparser2": {
+      "version": "9.1.0",
+      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-9.1.0.tgz",
+      "integrity": "sha512-5zfg6mHUoaer/97TxnGpxmbR7zJtPwIYFMZ/H5ucTlPZhKvtum05yiPK3Mgai3a0DyVxv7qYqoweaEd2nrYQzQ==",
+      "funding": [
+        "https://github.com/fb55/htmlparser2?sponsor=1",
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/fb55"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "domelementtype": "^2.3.0",
+        "domhandler": "^5.0.3",
+        "domutils": "^3.1.0",
+        "entities": "^4.5.0"
+      }
+    },
+    "node_modules/http-signature": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.4.0.tgz",
+      "integrity": "sha512-G5akfn7eKbpDN+8nPS/cb57YeA1jLTVxjpCj7tmm3QKPdyDy7T+qSC40e9ptydSWvkwjSXw1VbkpyEm39ukeAg==",
+      "dependencies": {
+        "assert-plus": "^1.0.0",
+        "jsprim": "^2.0.2",
+        "sshpk": "^1.18.0"
+      },
+      "engines": {
+        "node": ">=0.10"
+      }
+    },
+    "node_modules/iconv-lite": {
+      "version": "0.6.3",
+      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
+      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
+      "license": "MIT",
+      "dependencies": {
+        "safer-buffer": ">= 2.1.2 < 3.0.0"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/inherits": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
+    },
+    "node_modules/internal-slot": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz",
+      "integrity": "sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "hasown": "^2.0.2",
+        "side-channel": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/is-array-buffer": {
+      "version": "3.0.5",
+      "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz",
+      "integrity": "sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.3",
+        "get-intrinsic": "^1.2.6"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-async-function": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.0.tgz",
+      "integrity": "sha512-GExz9MtyhlZyXYLxzlJRj5WUCE661zhDa1Yna52CN57AJsymh+DvXXjyveSioqSRdxvUrdKdvqB1b5cVKsNpWQ==",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "get-proto": "^1.0.1",
+        "has-tostringtag": "^1.0.2",
+        "safe-regex-test": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-bigint": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz",
+      "integrity": "sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==",
+      "dependencies": {
+        "has-bigints": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-boolean-object": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.1.tgz",
+      "integrity": "sha512-l9qO6eFlUETHtuihLcYOaLKByJ1f+N4kthcU9YjHy3N+B3hWv0y/2Nd0mu/7lTFnRQHTrSdXF50HQ3bl5fEnng==",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "has-tostringtag": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-callable": {
+      "version": "1.2.7",
+      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
+      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-data-view": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.2.tgz",
+      "integrity": "sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "get-intrinsic": "^1.2.6",
+        "is-typed-array": "^1.1.13"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-date-object": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz",
+      "integrity": "sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "has-tostringtag": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-finalizationregistry": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.1.1.tgz",
+      "integrity": "sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==",
+      "dependencies": {
+        "call-bound": "^1.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-generator-function": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz",
+      "integrity": "sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "get-proto": "^1.0.0",
+        "has-tostringtag": "^1.0.2",
+        "safe-regex-test": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-map": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz",
+      "integrity": "sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-number-object": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz",
+      "integrity": "sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "has-tostringtag": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-regex": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz",
+      "integrity": "sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "gopd": "^1.2.0",
+        "has-tostringtag": "^1.0.2",
+        "hasown": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-set": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz",
+      "integrity": "sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-shared-array-buffer": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.4.tgz",
+      "integrity": "sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==",
+      "dependencies": {
+        "call-bound": "^1.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-string": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz",
+      "integrity": "sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "has-tostringtag": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-symbol": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz",
+      "integrity": "sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "has-symbols": "^1.1.0",
+        "safe-regex-test": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-typed-array": {
+      "version": "1.1.15",
+      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.15.tgz",
+      "integrity": "sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==",
+      "dependencies": {
+        "which-typed-array": "^1.1.16"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-typedarray": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
+      "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA=="
+    },
+    "node_modules/is-weakmap": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz",
+      "integrity": "sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-weakref": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.0.tgz",
+      "integrity": "sha512-SXM8Nwyys6nT5WP6pltOwKytLV7FqQ4UiibxVmW+EIosHcmCqkkjViTb5SNssDlkCiEYRP1/pdWUKVvZBmsR2Q==",
+      "dependencies": {
+        "call-bound": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-weakset": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz",
+      "integrity": "sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "get-intrinsic": "^1.2.6"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/isarray": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
+      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ=="
+    },
+    "node_modules/isstream": {
+      "version": "0.1.2",
+      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
+      "integrity": "sha512-Yljz7ffyPbrLpLngrMtZ7NduUgVvi6wG9RJ9IUcyCd59YQ911PBJphODUcbOVbqYfxe1wuYf/LJ8PauMRwsM/g=="
+    },
+    "node_modules/jsbn": {
+      "version": "0.1.1",
+      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
+      "integrity": "sha512-UVU9dibq2JcFWxQPA6KCqj5O42VOmAY3zQUfEKxU0KpTGXwNoCjkX1e13eHNvw/xPynt6pU0rZ1htjWTNTSXsg=="
+    },
+    "node_modules/json-schema": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.4.0.tgz",
+      "integrity": "sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA=="
+    },
+    "node_modules/json-schema-traverse": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
+      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
+      "peer": true
+    },
+    "node_modules/json-stringify-safe": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
+      "integrity": "sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA=="
+    },
+    "node_modules/jsprim": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-2.0.2.tgz",
+      "integrity": "sha512-gqXddjPqQ6G40VdnI6T6yObEC+pDNvyP95wdQhkWkg7crHH3km5qP1FsOXEkzEQwnz6gz5qGTn1c2Y52wP3OyQ==",
+      "engines": [
+        "node >=0.6.0"
+      ],
+      "dependencies": {
+        "assert-plus": "1.0.0",
+        "extsprintf": "1.3.0",
+        "json-schema": "0.4.0",
+        "verror": "1.10.0"
+      }
+    },
+    "node_modules/lodash": {
+      "version": "4.17.21",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
+      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
+    },
+    "node_modules/math-intrinsics": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
+      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/memory-pager": {
+      "version": "1.5.0",
+      "resolved": "https://registry.npmjs.org/memory-pager/-/memory-pager-1.5.0.tgz",
+      "integrity": "sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg==",
+      "license": "MIT"
+    },
+    "node_modules/mime": {
+      "version": "1.6.0",
+      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
+      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
+      "bin": {
+        "mime": "cli.js"
+      },
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/mime-db": {
+      "version": "1.52.0",
+      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
+      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/mime-types": {
+      "version": "2.1.35",
+      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
+      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
+      "dependencies": {
+        "mime-db": "1.52.0"
+      },
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/mongodb": {
+      "version": "6.12.0",
+      "resolved": "https://registry.npmjs.org/mongodb/-/mongodb-6.12.0.tgz",
+      "integrity": "sha512-RM7AHlvYfS7jv7+BXund/kR64DryVI+cHbVAy9P61fnb1RcWZqOW1/Wj2YhqMCx+MuYhqTRGv7AwHBzmsCKBfA==",
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@mongodb-js/saslprep": "^1.1.9",
+        "bson": "^6.10.1",
+        "mongodb-connection-string-url": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=16.20.1"
+      },
+      "peerDependencies": {
+        "@aws-sdk/credential-providers": "^3.188.0",
+        "@mongodb-js/zstd": "^1.1.0 || ^2.0.0",
+        "gcp-metadata": "^5.2.0",
+        "kerberos": "^2.0.1",
+        "mongodb-client-encryption": ">=6.0.0 <7",
+        "snappy": "^7.2.2",
+        "socks": "^2.7.1"
+      },
+      "peerDependenciesMeta": {
+        "@aws-sdk/credential-providers": {
+          "optional": true
+        },
+        "@mongodb-js/zstd": {
+          "optional": true
+        },
+        "gcp-metadata": {
+          "optional": true
+        },
+        "kerberos": {
+          "optional": true
+        },
+        "mongodb-client-encryption": {
+          "optional": true
+        },
+        "snappy": {
+          "optional": true
+        },
+        "socks": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/mongodb-connection-string-url": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-3.0.1.tgz",
+      "integrity": "sha512-XqMGwRX0Lgn05TDB4PyG2h2kKO/FfWJyCzYQbIhXUxz7ETt0I/FqHjUeqj37irJ+Dl1ZtU82uYyj14u2XsZKfg==",
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@types/whatwg-url": "^11.0.2",
+        "whatwg-url": "^13.0.0"
+      }
+    },
+    "node_modules/ms": {
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
+      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
+    },
+    "node_modules/needle": {
+      "version": "3.3.1",
+      "resolved": "https://registry.npmjs.org/needle/-/needle-3.3.1.tgz",
+      "integrity": "sha512-6k0YULvhpw+RoLNiQCRKOl09Rv1dPLr8hHnVjHqdolKwDrdNyk+Hmrthi4lIGPPz3r39dLx0hsF5s40sZ3Us4Q==",
+      "dependencies": {
+        "iconv-lite": "^0.6.3",
+        "sax": "^1.2.4"
+      },
+      "bin": {
         "needle": "bin/needle"
       },
       "engines": {
@@ -363,6 +1590,25 @@
         "webidl-conversions": "^3.0.0"
       }
     },
+    "node_modules/node-telegram-bot-api": {
+      "version": "0.66.0",
+      "resolved": "https://registry.npmjs.org/node-telegram-bot-api/-/node-telegram-bot-api-0.66.0.tgz",
+      "integrity": "sha512-s4Hrg5q+VPl4/tJVG++pImxF6eb8tNJNj4KnDqAOKL6zGU34lo9RXmyAN158njwGN+v8hdNf8s9fWIYW9hPb5A==",
+      "dependencies": {
+        "@cypress/request": "^3.0.1",
+        "@cypress/request-promise": "^5.0.0",
+        "array.prototype.findindex": "^2.0.2",
+        "bl": "^1.2.3",
+        "debug": "^3.2.7",
+        "eventemitter3": "^3.0.0",
+        "file-type": "^3.9.0",
+        "mime": "^1.6.0",
+        "pump": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=0.12"
+      }
+    },
     "node_modules/nth-check": {
       "version": "2.1.1",
       "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-2.1.1.tgz",
@@ -375,6 +1621,61 @@
         "url": "https://github.com/fb55/nth-check?sponsor=1"
       }
     },
+    "node_modules/oauth-sign": {
+      "version": "0.9.0",
+      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
+      "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
+      "peer": true,
+      "engines": {
+        "node": "*"
+      }
+    },
+    "node_modules/object-inspect": {
+      "version": "1.13.3",
+      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.3.tgz",
+      "integrity": "sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/object-keys": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
+      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/object.assign": {
+      "version": "4.1.7",
+      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.7.tgz",
+      "integrity": "sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.3",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0",
+        "has-symbols": "^1.1.0",
+        "object-keys": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/once": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
+      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
+      "dependencies": {
+        "wrappy": "1"
+      }
+    },
     "node_modules/openwhisk": {
       "version": "3.21.8",
       "resolved": "https://registry.npmjs.org/openwhisk/-/openwhisk-3.21.8.tgz",
@@ -387,6 +1688,22 @@
         "node": ">=18.0.0"
       }
     },
+    "node_modules/own-keys": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/own-keys/-/own-keys-1.0.1.tgz",
+      "integrity": "sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==",
+      "dependencies": {
+        "get-intrinsic": "^1.2.6",
+        "object-keys": "^1.1.1",
+        "safe-push-apply": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
     "node_modules/parse5": {
       "version": "7.2.1",
       "resolved": "https://registry.npmjs.org/parse5/-/parse5-7.2.1.tgz",
@@ -424,6 +1741,11 @@
         "url": "https://github.com/inikulin/parse5?sponsor=1"
       }
     },
+    "node_modules/performance-now": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
+      "integrity": "sha512-7EAHlyLHI56VEIdK57uwHdHKIaAGbnXPiw0yWbarQZOKaKpvUIgW0jWRVLiatnM+XXlSwsanIBH/hzGMJulMow=="
+    },
     "node_modules/pg": {
       "version": "8.13.1",
       "resolved": "https://registry.npmjs.org/pg/-/pg-8.13.1.tgz",
@@ -505,50 +1827,288 @@
         "split2": "^4.1.0"
       }
     },
+    "node_modules/possible-typed-array-names": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.0.0.tgz",
+      "integrity": "sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
     "node_modules/postgres-array": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/postgres-array/-/postgres-array-2.0.0.tgz",
       "integrity": "sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==",
       "engines": {
-        "node": ">=4"
+        "node": ">=4"
+      }
+    },
+    "node_modules/postgres-bytea": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz",
+      "integrity": "sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/postgres-date": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz",
+      "integrity": "sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/postgres-interval": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz",
+      "integrity": "sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==",
+      "dependencies": {
+        "xtend": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/process-nextick-args": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
+      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag=="
+    },
+    "node_modules/psl": {
+      "version": "1.15.0",
+      "resolved": "https://registry.npmjs.org/psl/-/psl-1.15.0.tgz",
+      "integrity": "sha512-JZd3gMVBAVQkSs6HdNZo9Sdo0LNcQeMNP3CozBJb3JYC/QUYZTnKxP+f8oWRX4rHP5EurWxqAHTSwUCjlNKa1w==",
+      "dependencies": {
+        "punycode": "^2.3.1"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/lupomontero"
+      }
+    },
+    "node_modules/pump": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/pump/-/pump-2.0.1.tgz",
+      "integrity": "sha512-ruPMNRkN3MHP1cWJc9OWr+T/xDP0jhXYCLfJcBuX54hhfIBnaQmAUMfDcG4DM5UMWByBbJY69QSphm3jtDKIkA==",
+      "dependencies": {
+        "end-of-stream": "^1.1.0",
+        "once": "^1.3.1"
+      }
+    },
+    "node_modules/punycode": {
+      "version": "2.3.1",
+      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
+      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/qs": {
+      "version": "6.13.1",
+      "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.1.tgz",
+      "integrity": "sha512-EJPeIn0CYrGu+hli1xilKAPXODtJ12T0sP63Ijx2/khC2JtuaN3JyNIpvmnkmaEtha9ocbG4A4cMcr+TvqvwQg==",
+      "dependencies": {
+        "side-channel": "^1.0.6"
+      },
+      "engines": {
+        "node": ">=0.6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/querystringify": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/querystringify/-/querystringify-2.2.0.tgz",
+      "integrity": "sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ=="
+    },
+    "node_modules/readable-stream": {
+      "version": "2.3.8",
+      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
+      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
+      "dependencies": {
+        "core-util-is": "~1.0.0",
+        "inherits": "~2.0.3",
+        "isarray": "~1.0.0",
+        "process-nextick-args": "~2.0.0",
+        "safe-buffer": "~5.1.1",
+        "string_decoder": "~1.1.1",
+        "util-deprecate": "~1.0.1"
+      }
+    },
+    "node_modules/readable-stream/node_modules/safe-buffer": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
+      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
+    },
+    "node_modules/reflect.getprototypeof": {
+      "version": "1.0.10",
+      "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz",
+      "integrity": "sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.9",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0",
+        "get-intrinsic": "^1.2.7",
+        "get-proto": "^1.0.1",
+        "which-builtin-type": "^1.2.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/regexp.prototype.flags": {
+      "version": "1.5.4",
+      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz",
+      "integrity": "sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "define-properties": "^1.2.1",
+        "es-errors": "^1.3.0",
+        "get-proto": "^1.0.1",
+        "gopd": "^1.2.0",
+        "set-function-name": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/request": {
+      "version": "2.88.2",
+      "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
+      "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
+      "deprecated": "request has been deprecated, see https://github.com/request/request/issues/3142",
+      "peer": true,
+      "dependencies": {
+        "aws-sign2": "~0.7.0",
+        "aws4": "^1.8.0",
+        "caseless": "~0.12.0",
+        "combined-stream": "~1.0.6",
+        "extend": "~3.0.2",
+        "forever-agent": "~0.6.1",
+        "form-data": "~2.3.2",
+        "har-validator": "~5.1.3",
+        "http-signature": "~1.2.0",
+        "is-typedarray": "~1.0.0",
+        "isstream": "~0.1.2",
+        "json-stringify-safe": "~5.0.1",
+        "mime-types": "~2.1.19",
+        "oauth-sign": "~0.9.0",
+        "performance-now": "^2.1.0",
+        "qs": "~6.5.2",
+        "safe-buffer": "^5.1.2",
+        "tough-cookie": "~2.5.0",
+        "tunnel-agent": "^0.6.0",
+        "uuid": "^3.3.2"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/request-promise-core": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/request-promise-core/-/request-promise-core-1.1.3.tgz",
+      "integrity": "sha512-QIs2+ArIGQVp5ZYbWD5ZLCY29D5CfWizP8eWnm8FoGD1TX61veauETVQbrV60662V0oFBkrDOuaBI8XgtuyYAQ==",
+      "dependencies": {
+        "lodash": "^4.17.15"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      },
+      "peerDependencies": {
+        "request": "^2.34"
+      }
+    },
+    "node_modules/request/node_modules/form-data": {
+      "version": "2.3.3",
+      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
+      "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
+      "peer": true,
+      "dependencies": {
+        "asynckit": "^0.4.0",
+        "combined-stream": "^1.0.6",
+        "mime-types": "^2.1.12"
+      },
+      "engines": {
+        "node": ">= 0.12"
+      }
+    },
+    "node_modules/request/node_modules/http-signature": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
+      "integrity": "sha512-CAbnr6Rz4CYQkLYUtSNXxQPUH2gK8f3iWexVlsnMeD+GjlsQ0Xsy1cOX+mN3dtxYomRy21CiOzU8Uhw6OwncEQ==",
+      "peer": true,
+      "dependencies": {
+        "assert-plus": "^1.0.0",
+        "jsprim": "^1.2.2",
+        "sshpk": "^1.7.0"
+      },
+      "engines": {
+        "node": ">=0.8",
+        "npm": ">=1.3.7"
       }
     },
-    "node_modules/postgres-bytea": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz",
-      "integrity": "sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==",
+    "node_modules/request/node_modules/jsprim": {
+      "version": "1.4.2",
+      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.2.tgz",
+      "integrity": "sha512-P2bSOMAc/ciLz6DzgjVlGJP9+BrJWu5UDGK70C2iweC5QBIeFf0ZXRvGjEj2uYgrY2MkAAhsSWHDWlFtEroZWw==",
+      "peer": true,
+      "dependencies": {
+        "assert-plus": "1.0.0",
+        "extsprintf": "1.3.0",
+        "json-schema": "0.4.0",
+        "verror": "1.10.0"
+      },
       "engines": {
-        "node": ">=0.10.0"
+        "node": ">=0.6.0"
       }
     },
-    "node_modules/postgres-date": {
-      "version": "1.0.7",
-      "resolved": "https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz",
-      "integrity": "sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==",
+    "node_modules/request/node_modules/qs": {
+      "version": "6.5.3",
+      "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.3.tgz",
+      "integrity": "sha512-qxXIEh4pCGfHICj1mAJQ2/2XVZkjCDTcEgfoSQxc/fYivUZxTkk7L3bDBJSoNrEzXI17oUO5Dp07ktqE5KzczA==",
+      "peer": true,
       "engines": {
-        "node": ">=0.10.0"
+        "node": ">=0.6"
       }
     },
-    "node_modules/postgres-interval": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz",
-      "integrity": "sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==",
+    "node_modules/request/node_modules/tough-cookie": {
+      "version": "2.5.0",
+      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
+      "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
+      "peer": true,
       "dependencies": {
-        "xtend": "^4.0.0"
+        "psl": "^1.1.28",
+        "punycode": "^2.1.1"
       },
       "engines": {
-        "node": ">=0.10.0"
+        "node": ">=0.8"
       }
     },
-    "node_modules/punycode": {
-      "version": "2.3.1",
-      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
-      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=6"
+    "node_modules/request/node_modules/uuid": {
+      "version": "3.4.0",
+      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
+      "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
+      "deprecated": "Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.",
+      "peer": true,
+      "bin": {
+        "uuid": "bin/uuid"
       }
     },
+    "node_modules/requires-port": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz",
+      "integrity": "sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ=="
+    },
     "node_modules/retry": {
       "version": "0.13.1",
       "resolved": "https://registry.npmjs.org/retry/-/retry-0.13.1.tgz",
@@ -557,6 +2117,84 @@
         "node": ">= 4"
       }
     },
+    "node_modules/safe-array-concat": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.3.tgz",
+      "integrity": "sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.2",
+        "get-intrinsic": "^1.2.6",
+        "has-symbols": "^1.1.0",
+        "isarray": "^2.0.5"
+      },
+      "engines": {
+        "node": ">=0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/safe-array-concat/node_modules/isarray": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
+      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw=="
+    },
+    "node_modules/safe-buffer": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
+      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ]
+    },
+    "node_modules/safe-push-apply": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz",
+      "integrity": "sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "isarray": "^2.0.5"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/safe-push-apply/node_modules/isarray": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
+      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw=="
+    },
+    "node_modules/safe-regex-test": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz",
+      "integrity": "sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "es-errors": "^1.3.0",
+        "is-regex": "^1.2.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
     "node_modules/safer-buffer": {
       "version": "2.1.2",
       "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
@@ -568,6 +2206,117 @@
       "resolved": "https://registry.npmjs.org/sax/-/sax-1.4.1.tgz",
       "integrity": "sha512-+aWOz7yVScEGoKNd4PA10LZ8sk0A/z5+nXQG5giUO5rprX9jgYsTdov9qCchZiPIZezbZH+jRut8nPodFAX4Jg=="
     },
+    "node_modules/set-function-length": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
+      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
+      "dependencies": {
+        "define-data-property": "^1.1.4",
+        "es-errors": "^1.3.0",
+        "function-bind": "^1.1.2",
+        "get-intrinsic": "^1.2.4",
+        "gopd": "^1.0.1",
+        "has-property-descriptors": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/set-function-name": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz",
+      "integrity": "sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==",
+      "dependencies": {
+        "define-data-property": "^1.1.4",
+        "es-errors": "^1.3.0",
+        "functions-have-names": "^1.2.3",
+        "has-property-descriptors": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/set-proto": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz",
+      "integrity": "sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==",
+      "dependencies": {
+        "dunder-proto": "^1.0.1",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/side-channel": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
+      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "object-inspect": "^1.13.3",
+        "side-channel-list": "^1.0.0",
+        "side-channel-map": "^1.0.1",
+        "side-channel-weakmap": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/side-channel-list": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
+      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "object-inspect": "^1.13.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/side-channel-map": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
+      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.5",
+        "object-inspect": "^1.13.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/side-channel-weakmap": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
+      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.5",
+        "object-inspect": "^1.13.3",
+        "side-channel-map": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
     "node_modules/sparse-bitfield": {
       "version": "3.0.3",
       "resolved": "https://registry.npmjs.org/sparse-bitfield/-/sparse-bitfield-3.0.3.tgz",
@@ -585,6 +2334,131 @@
         "node": ">= 10.x"
       }
     },
+    "node_modules/sshpk": {
+      "version": "1.18.0",
+      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.18.0.tgz",
+      "integrity": "sha512-2p2KJZTSqQ/I3+HX42EpYOa2l3f8Erv8MWKsy2I9uf4wA7yFIkXRffYdsx86y6z4vHtV8u7g+pPlr8/4ouAxsQ==",
+      "dependencies": {
+        "asn1": "~0.2.3",
+        "assert-plus": "^1.0.0",
+        "bcrypt-pbkdf": "^1.0.0",
+        "dashdash": "^1.12.0",
+        "ecc-jsbn": "~0.1.1",
+        "getpass": "^0.1.1",
+        "jsbn": "~0.1.0",
+        "safer-buffer": "^2.0.2",
+        "tweetnacl": "~0.14.0"
+      },
+      "bin": {
+        "sshpk-conv": "bin/sshpk-conv",
+        "sshpk-sign": "bin/sshpk-sign",
+        "sshpk-verify": "bin/sshpk-verify"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/stealthy-require": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/stealthy-require/-/stealthy-require-1.1.1.tgz",
+      "integrity": "sha512-ZnWpYnYugiOVEY5GkcuJK1io5V8QmNYChG62gSit9pQVGErXtrKuPC55ITaVSukmMta5qpMU7vqLt2Lnni4f/g==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/string_decoder": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+      "dependencies": {
+        "safe-buffer": "~5.1.0"
+      }
+    },
+    "node_modules/string_decoder/node_modules/safe-buffer": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
+      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
+    },
+    "node_modules/string.prototype.trim": {
+      "version": "1.2.10",
+      "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.10.tgz",
+      "integrity": "sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.2",
+        "define-data-property": "^1.1.4",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.5",
+        "es-object-atoms": "^1.0.0",
+        "has-property-descriptors": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/string.prototype.trimend": {
+      "version": "1.0.9",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.9.tgz",
+      "integrity": "sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.2",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/string.prototype.trimstart": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz",
+      "integrity": "sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/tldts": {
+      "version": "6.1.71",
+      "resolved": "https://registry.npmjs.org/tldts/-/tldts-6.1.71.tgz",
+      "integrity": "sha512-LQIHmHnuzfZgZWAf2HzL83TIIrD8NhhI0DVxqo9/FdOd4ilec+NTNZOlDZf7EwrTNoutccbsHjvWHYXLAtvxjw==",
+      "dependencies": {
+        "tldts-core": "^6.1.71"
+      },
+      "bin": {
+        "tldts": "bin/cli.js"
+      }
+    },
+    "node_modules/tldts-core": {
+      "version": "6.1.71",
+      "resolved": "https://registry.npmjs.org/tldts-core/-/tldts-core-6.1.71.tgz",
+      "integrity": "sha512-LRbChn2YRpic1KxY+ldL1pGXN/oVvKfCVufwfVzEQdFYNo39uF7AJa/WXdo+gYO7PTvdfkCPCed6Hkvz/kR7jg=="
+    },
+    "node_modules/tough-cookie": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-5.1.0.tgz",
+      "integrity": "sha512-rvZUv+7MoBYTiDmFPBrhL7Ujx9Sk+q9wwm22x8c8T5IJaR+Wsyc7TNxbVxo84kZoRJZZMazowFLqpankBEQrGg==",
+      "dependencies": {
+        "tldts": "^6.1.32"
+      },
+      "engines": {
+        "node": ">=16"
+      }
+    },
     "node_modules/tr46": {
       "version": "4.1.1",
       "resolved": "https://registry.npmjs.org/tr46/-/tr46-4.1.1.tgz",
@@ -597,6 +2471,109 @@
         "node": ">=14"
       }
     },
+    "node_modules/tunnel-agent": {
+      "version": "0.6.0",
+      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
+      "integrity": "sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==",
+      "dependencies": {
+        "safe-buffer": "^5.0.1"
+      },
+      "engines": {
+        "node": "*"
+      }
+    },
+    "node_modules/tweetnacl": {
+      "version": "0.14.5",
+      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
+      "integrity": "sha512-KXXFFdAbFXY4geFIwoyNK+f5Z1b7swfXABfL7HXCmoIWMKU3dmS26672A4EeQtDzLKy7SXmfBu51JolvEKwtGA=="
+    },
+    "node_modules/typed-array-buffer": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.3.tgz",
+      "integrity": "sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "es-errors": "^1.3.0",
+        "is-typed-array": "^1.1.14"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/typed-array-byte-length": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.3.tgz",
+      "integrity": "sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "for-each": "^0.3.3",
+        "gopd": "^1.2.0",
+        "has-proto": "^1.2.0",
+        "is-typed-array": "^1.1.14"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/typed-array-byte-offset": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.4.tgz",
+      "integrity": "sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==",
+      "dependencies": {
+        "available-typed-arrays": "^1.0.7",
+        "call-bind": "^1.0.8",
+        "for-each": "^0.3.3",
+        "gopd": "^1.2.0",
+        "has-proto": "^1.2.0",
+        "is-typed-array": "^1.1.15",
+        "reflect.getprototypeof": "^1.0.9"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/typed-array-length": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.7.tgz",
+      "integrity": "sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "for-each": "^0.3.3",
+        "gopd": "^1.0.1",
+        "is-typed-array": "^1.1.13",
+        "possible-typed-array-names": "^1.0.0",
+        "reflect.getprototypeof": "^1.0.6"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/unbox-primitive": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.1.0.tgz",
+      "integrity": "sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "has-bigints": "^1.0.2",
+        "has-symbols": "^1.1.0",
+        "which-boxed-primitive": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
     "node_modules/undici": {
       "version": "6.21.0",
       "resolved": "https://registry.npmjs.org/undici/-/undici-6.21.0.tgz",
@@ -606,6 +2583,63 @@
         "node": ">=18.17"
       }
     },
+    "node_modules/universalify": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.2.0.tgz",
+      "integrity": "sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg==",
+      "engines": {
+        "node": ">= 4.0.0"
+      }
+    },
+    "node_modules/uri-js": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
+      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
+      "peer": true,
+      "dependencies": {
+        "punycode": "^2.1.0"
+      }
+    },
+    "node_modules/url-parse": {
+      "version": "1.5.10",
+      "resolved": "https://registry.npmjs.org/url-parse/-/url-parse-1.5.10.tgz",
+      "integrity": "sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ==",
+      "dependencies": {
+        "querystringify": "^2.1.1",
+        "requires-port": "^1.0.0"
+      }
+    },
+    "node_modules/util-deprecate": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
+      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw=="
+    },
+    "node_modules/uuid": {
+      "version": "8.3.2",
+      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
+      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
+      "bin": {
+        "uuid": "dist/bin/uuid"
+      }
+    },
+    "node_modules/verror": {
+      "version": "1.10.0",
+      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
+      "integrity": "sha512-ZZKSmDAEFOijERBLkmYfJ+vmk3w+7hOLYDNkRCuRuMJGEmqYNCNLyBBFwWKVMhfwaEF3WOd0Zlw86U/WC/+nYw==",
+      "engines": [
+        "node >=0.6.0"
+      ],
+      "dependencies": {
+        "assert-plus": "^1.0.0",
+        "core-util-is": "1.0.2",
+        "extsprintf": "^1.2.0"
+      }
+    },
+    "node_modules/verror/node_modules/core-util-is": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
+      "integrity": "sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ=="
+    },
     "node_modules/webidl-conversions": {
       "version": "7.0.0",
       "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz",
@@ -649,6 +2683,96 @@
         "node": ">=16"
       }
     },
+    "node_modules/which-boxed-primitive": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz",
+      "integrity": "sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==",
+      "dependencies": {
+        "is-bigint": "^1.1.0",
+        "is-boolean-object": "^1.2.1",
+        "is-number-object": "^1.1.1",
+        "is-string": "^1.1.1",
+        "is-symbol": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/which-builtin-type": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.2.1.tgz",
+      "integrity": "sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "function.prototype.name": "^1.1.6",
+        "has-tostringtag": "^1.0.2",
+        "is-async-function": "^2.0.0",
+        "is-date-object": "^1.1.0",
+        "is-finalizationregistry": "^1.1.0",
+        "is-generator-function": "^1.0.10",
+        "is-regex": "^1.2.1",
+        "is-weakref": "^1.0.2",
+        "isarray": "^2.0.5",
+        "which-boxed-primitive": "^1.1.0",
+        "which-collection": "^1.0.2",
+        "which-typed-array": "^1.1.16"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/which-builtin-type/node_modules/isarray": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
+      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw=="
+    },
+    "node_modules/which-collection": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz",
+      "integrity": "sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==",
+      "dependencies": {
+        "is-map": "^2.0.3",
+        "is-set": "^2.0.3",
+        "is-weakmap": "^2.0.2",
+        "is-weakset": "^2.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/which-typed-array": {
+      "version": "1.1.18",
+      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.18.tgz",
+      "integrity": "sha512-qEcY+KJYlWyLH9vNbsr6/5j59AXk5ni5aakf8ldzBvGde6Iz4sxZGkJyWSAueTG7QhOvNRYb1lDdFmL5Td0QKA==",
+      "dependencies": {
+        "available-typed-arrays": "^1.0.7",
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.3",
+        "for-each": "^0.3.3",
+        "gopd": "^1.2.0",
+        "has-tostringtag": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/wrappy": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
+      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
+    },
     "node_modules/xtend": {
       "version": "4.0.2",
       "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
diff --git a/package.json b/package.json
index 6bd4cd4..982714c 100644
--- a/package.json
+++ b/package.json
@@ -16,6 +16,7 @@
     "cheerio": "^1.0.0",
     "mongodb": "^6.3.0",
     "node-fetch": "^2.7.0",
+    "node-telegram-bot-api": "^0.66.0",
     "openwhisk": "^3.21.8",
     "pg": "^8.13.1"
   }

commit de025abc23c3e1aa2cb21fe84a3788b97acc78ee
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Sat Jan 11 21:56:56 2025 +0100

    typo

diff --git a/README.md b/README.md
index 8ab75ba..4eaa0c8 100644
--- a/README.md
+++ b/README.md
@@ -20,8 +20,10 @@ Para probar:
 
 9. wsk action invoke lib/deleteProduct -r -p "id" "1"
 
-10. wsk action invoke lib/runtime -r
+10. wsk action invoke lib/listProducts -r
 
-##NOTA:
+11. wsk action invoke lib/runtime -r
+
+## NOTA:
 
 Dejo WSK.exe que es la CLI de openwhisk para windows.

commit c9aa40f85741334716fffd28e5e0fb8042bc7664
Author: Jefferson Caiza <jpcaijam@upv.edu.es>
Date:   Sat Jan 11 21:22:11 2025 +0100

    update webpack

diff --git a/webpack.config.js b/webpack.config.js
index 440a5cb..fc4e8e3 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -9,6 +9,7 @@ module.exports = {
         enviarNotificacion: './lib/enviarNotificacion.js',
         runtime: './lib/runtime.js',
         deleteProduct: './lib/deleteProduct.js',
+        listProducts: './lib/listProducts.js',
     },
     output: {
         path: path.resolve(__dirname, 'dist'),

commit 3a838d07c7178f3e5195858d00437947ba5549dc
Author: Jefferson Caiza <jpcaijam@upv.edu.es>
Date:   Sat Jan 11 21:16:29 2025 +0100

    update package.json

diff --git a/package-lock.json b/package-lock.json
index 316edc6..6cc342f 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -12,6 +12,7 @@
         "cheerio": "^1.0.0",
         "mongodb": "^6.3.0",
         "node-fetch": "^2.7.0",
+        "openwhisk": "^3.21.8",
         "pg": "^8.13.1"
       }
     },
@@ -39,6 +40,14 @@
         "@types/webidl-conversions": "*"
       }
     },
+    "node_modules/async-retry": {
+      "version": "1.3.3",
+      "resolved": "https://registry.npmjs.org/async-retry/-/async-retry-1.3.3.tgz",
+      "integrity": "sha512-wfr/jstw9xNi/0teMHrRW7dsz3Lt5ARhYNZ2ewpadnhaIp5mbALhOAP+EAdsC7t4Z6wqsDVv9+W6gm1Dk9mEyw==",
+      "dependencies": {
+        "retry": "0.13.1"
+      }
+    },
     "node_modules/boolbase": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
@@ -297,6 +306,21 @@
         "whatwg-url": "^13.0.0"
       }
     },
+    "node_modules/needle": {
+      "version": "3.3.1",
+      "resolved": "https://registry.npmjs.org/needle/-/needle-3.3.1.tgz",
+      "integrity": "sha512-6k0YULvhpw+RoLNiQCRKOl09Rv1dPLr8hHnVjHqdolKwDrdNyk+Hmrthi4lIGPPz3r39dLx0hsF5s40sZ3Us4Q==",
+      "dependencies": {
+        "iconv-lite": "^0.6.3",
+        "sax": "^1.2.4"
+      },
+      "bin": {
+        "needle": "bin/needle"
+      },
+      "engines": {
+        "node": ">= 4.4.x"
+      }
+    },
     "node_modules/node-fetch": {
       "version": "2.7.0",
       "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
@@ -351,6 +375,18 @@
         "url": "https://github.com/fb55/nth-check?sponsor=1"
       }
     },
+    "node_modules/openwhisk": {
+      "version": "3.21.8",
+      "resolved": "https://registry.npmjs.org/openwhisk/-/openwhisk-3.21.8.tgz",
+      "integrity": "sha512-GoD4wytw7KSNSwZ4f6/iQcLPJK8cW0FRyhuaQkRbsGL6BCV9tigQ9zoQdJRkZUKilm29cLyGIAF5cn3pFn73LQ==",
+      "dependencies": {
+        "async-retry": "^1.3.3",
+        "needle": "^3.2.0"
+      },
+      "engines": {
+        "node": ">=18.0.0"
+      }
+    },
     "node_modules/parse5": {
       "version": "7.2.1",
       "resolved": "https://registry.npmjs.org/parse5/-/parse5-7.2.1.tgz",
@@ -513,12 +549,25 @@
         "node": ">=6"
       }
     },
+    "node_modules/retry": {
+      "version": "0.13.1",
+      "resolved": "https://registry.npmjs.org/retry/-/retry-0.13.1.tgz",
+      "integrity": "sha512-XQBQ3I8W1Cge0Seh+6gjj03LbmRFWuoszgK9ooCpwYIrhhoO80pfq4cUkU5DkknwfOfFteRwlZ56PYOGYyFWdg==",
+      "engines": {
+        "node": ">= 4"
+      }
+    },
     "node_modules/safer-buffer": {
       "version": "2.1.2",
       "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
       "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
       "license": "MIT"
     },
+    "node_modules/sax": {
+      "version": "1.4.1",
+      "resolved": "https://registry.npmjs.org/sax/-/sax-1.4.1.tgz",
+      "integrity": "sha512-+aWOz7yVScEGoKNd4PA10LZ8sk0A/z5+nXQG5giUO5rprX9jgYsTdov9qCchZiPIZezbZH+jRut8nPodFAX4Jg=="
+    },
     "node_modules/sparse-bitfield": {
       "version": "3.0.3",
       "resolved": "https://registry.npmjs.org/sparse-bitfield/-/sparse-bitfield-3.0.3.tgz",
diff --git a/package.json b/package.json
index b76ace4..6bd4cd4 100644
--- a/package.json
+++ b/package.json
@@ -16,6 +16,7 @@
     "cheerio": "^1.0.0",
     "mongodb": "^6.3.0",
     "node-fetch": "^2.7.0",
+    "openwhisk": "^3.21.8",
     "pg": "^8.13.1"
   }
 }

commit fdcee1f7ecabd9719e05a9ace7b85e17766a9daf
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Sat Jan 11 21:11:36 2025 +0100

    Añadido listProduct y ajustado en concsecuencia

diff --git a/lib/addProduct.js b/lib/addProduct.js
index 14e6ca9..b7534c5 100644
--- a/lib/addProduct.js
+++ b/lib/addProduct.js
@@ -15,7 +15,7 @@ async function connectDB() {
 async function main(params) {  
     if (!params || !params.name || !params.price || !params.url) {
         console.error('Usage: node addProduct.js <name> <price> <url>');
-        return { error: 'Missing required parameters' }; 
+        return { error: 'Faltan los parametros requeridos' }; 
     }
 
     const { name, price, url } = params; 
@@ -38,13 +38,13 @@ async function main(params) {
         };
 
         const res = await client.query(query);
-        console.log('Product added successfully:', res.rows[0]);
+        console.log('Producto agregado correctamente:', res.rows[0]);
         
         await client.end();
 
         return { result: res.rows[0] }; 
     } catch (err) {
-        console.error('Error adding product:', err);
+        console.error('Error agregando producto:', err);
         return { error: err.message }; 
     }
 }
diff --git a/lib/deleteProduct.js b/lib/deleteProduct.js
index 88911cc..1329072 100644
--- a/lib/deleteProduct.js
+++ b/lib/deleteProduct.js
@@ -14,7 +14,7 @@ async function connectDB() {
 
 async function main(params) {
     if (!params || !params.id) {
-        return { error: 'Missing product ID parameter' };
+        return { error: 'Falta el ID del producto' };
     }
 
     const { id } = params;
@@ -31,15 +31,15 @@ async function main(params) {
         
         if (res.rowCount === 0) {
             await client.end();
-            return { error: 'Product not found' };
+            return { error: 'Producto no encontrado' };
         }
 
-        console.log('Product deleted successfully:', res.rows[0]);
+        console.log('Producto eliminado correctamente:', res.rows[0]);
         await client.end();
         
         return { result: res.rows[0] };
     } catch (err) {
-        console.error('Error deleting product:', err);
+        console.error('Error eliminando producto:', err);
         return { error: err.message };
     }
 }
diff --git a/lib/listProducts.js b/lib/listProducts.js
new file mode 100644
index 0000000..3731874
--- /dev/null
+++ b/lib/listProducts.js
@@ -0,0 +1,31 @@
+const { Client } = require('pg');
+
+async function connectDB() {
+    const client = new Client({
+        user: 'rse_user',
+        host: 'host.docker.internal',
+        database: 'mydb',
+        password: 'rse_password',
+        port: 5432,
+    });
+    await client.connect();
+    return client;
+}
+
+async function main() {
+    try {
+        const client = await connectDB();
+        const result = await client.query('SELECT * FROM products');
+        await client.end();
+        
+        return {
+            products: result.rows,
+            count: result.rowCount
+        };
+    } catch (error) {
+        console.error('Error obteniendo productos:', error);
+        return { error: error.message };
+    }
+}
+
+module.exports.main = main; 
\ No newline at end of file
diff --git a/lib/runtime.js b/lib/runtime.js
index 543ce6b..656e1c2 100644
--- a/lib/runtime.js
+++ b/lib/runtime.js
@@ -1,19 +1,7 @@
-const { Client } = require('pg');
 const scraper = require('./scraper');
 const notificador = require('./enviarNotificacion');
 const openwhisk = require('openwhisk');
-
-async function connectDB() {
-    const client = new Client({
-        user: 'rse_user',
-        host: 'host.docker.internal',
-        database: 'mydb',
-        password: 'rse_password',
-        port: 5432,
-    });
-    await client.connect();
-    return client;
-}
+const listProducts = require('./listProducts');
 
 const options = {
     apihost: 'http://host.docker.internal:3233',
@@ -24,14 +12,11 @@ const options = {
 
 const ow = openwhisk(options);
 
-
 async function main() {
     try {
-        const client = await connectDB();
-        
-        const result = await client.query('SELECT * FROM products');
+        const { products } = await listProducts.main();
         
-        for (const product of result.rows) {
+        for (const product of products) {
             const currentData = await scraper.main({ url: product.url });
             
             if (currentData.precio < product.price) {
@@ -42,11 +27,10 @@ async function main() {
             }
         }
         
-        await client.end();
-        return { message: 'Price check completed successfully' };
+        return { message: 'Precio comprobado correctamente' };
         
     } catch (error) {
-        console.error('Error checking prices:', error);
+        console.error('Error comprobando precios:', error);
         return { error: error.message };
     }
 }
diff --git a/manifest.yaml b/manifest.yaml
index b4fd6cd..209f27f 100644
--- a/manifest.yaml
+++ b/manifest.yaml
@@ -20,3 +20,6 @@ project:
         runtime:
           location: dist/runtime.js
           runtime: nodejs:default
+        listProducts:
+          location: dist/listProducts.js
+          runtime: nodejs:default

commit bd3367344a0688dc306f4ad604d09212cd8eb793
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Sat Jan 11 20:57:59 2025 +0100

    accion delete y runtime

diff --git a/README.md b/README.md
index bd140c9..8ab75ba 100644
--- a/README.md
+++ b/README.md
@@ -6,19 +6,21 @@ Para probar:
 
 2. docker run -d --name my-postgres-db -e POSTGRES_USER=rse_user -e POSTGRES_PASSWORD=rse_password -e POSTGRES_DB=mydb -p 5432:5432 -v postgres_data:/var/lib/postgresql/data postgres:latest
 
-3. cd owisk
+3. npm install
 
-4. npm install
+4. webpack
 
-5. webpack
+5. wsk project deploy
 
-6. wsk project deploy
+6. wsk action invoke lib/scraper -r -p "url" "https://deplatec.com/torres-gaming/63909-pctec-gaming-ga5-ryzen-5-5500-32gb-1tb-rtx-4060-ti.html"
 
-7. wsk action invoke lib/scraper -r -p "url" "https://deplatec.com/torres-gaming/63909-pctec-gaming-ga5-ryzen-5-5500-32gb-1tb-rtx-4060-ti.html"
+7. wsk action invoke lib/enviarNotificacion -r -p "mensaje" "Hola, esto es una prueba"
 
-8. wsk action invoke lib/enviarNotificacion -r -p "mensaje" "Hola, esto es una prueba"
+8. wsk action invoke lib/addProduct -r -p "name" "PCTEC - GAMING GA5 RYZEN 5 5500 | 32GB | 1TB | RTX 4060 TI" -p  "price" "769" -p "url" "https://deplatec.com/torres-gaming/63909-pctec-gaming-ga5-ryzen-5-5500-32gb-1tb-rtx-4060-ti.html"
 
-9. wsk action invoke lib/addProduct -r -p "name" "Nombre del producto" -p  "price" "Precio del producto" -p "url" "URL del producto"
+9. wsk action invoke lib/deleteProduct -r -p "id" "1"
+
+10. wsk action invoke lib/runtime -r
 
 ##NOTA:
 
diff --git a/lib/addProduct.js b/lib/addProduct.js
index 070585f..14e6ca9 100644
--- a/lib/addProduct.js
+++ b/lib/addProduct.js
@@ -3,7 +3,7 @@ const { Client } = require('pg');
 async function connectDB() {
     const client = new Client({
       user: 'rse_user',
-      host: '172.17.0.6',  
+      host: 'host.docker.internal',  
       database: 'mydb',
       password: 'rse_password',
       port: 5432,
diff --git a/lib/deleteProduct.js b/lib/deleteProduct.js
new file mode 100644
index 0000000..88911cc
--- /dev/null
+++ b/lib/deleteProduct.js
@@ -0,0 +1,47 @@
+const { Client } = require('pg');
+
+async function connectDB() {
+    const client = new Client({
+        user: 'rse_user',
+        host: 'host.docker.internal',
+        database: 'mydb',
+        password: 'rse_password',
+        port: 5432,
+    });
+    await client.connect();
+    return client;
+}
+
+async function main(params) {
+    if (!params || !params.id) {
+        return { error: 'Missing product ID parameter' };
+    }
+
+    const { id } = params;
+
+    try {
+        const client = await connectDB();
+        
+        const query = {
+            text: 'DELETE FROM products WHERE id = $1 RETURNING *',
+            values: [id],
+        };
+
+        const res = await client.query(query);
+        
+        if (res.rowCount === 0) {
+            await client.end();
+            return { error: 'Product not found' };
+        }
+
+        console.log('Product deleted successfully:', res.rows[0]);
+        await client.end();
+        
+        return { result: res.rows[0] };
+    } catch (err) {
+        console.error('Error deleting product:', err);
+        return { error: err.message };
+    }
+}
+
+module.exports.main = main; 
\ No newline at end of file
diff --git a/lib/Periodo.js b/lib/runtime.js
similarity index 70%
rename from lib/Periodo.js
rename to lib/runtime.js
index 05c740f..543ce6b 100644
--- a/lib/Periodo.js
+++ b/lib/runtime.js
@@ -1,11 +1,12 @@
 const { Client } = require('pg');
 const scraper = require('./scraper');
 const notificador = require('./enviarNotificacion');
+const openwhisk = require('openwhisk');
 
 async function connectDB() {
     const client = new Client({
         user: 'rse_user',
-        host: 'localhost',
+        host: 'host.docker.internal',
         database: 'mydb',
         password: 'rse_password',
         port: 5432,
@@ -14,6 +15,16 @@ async function connectDB() {
     return client;
 }
 
+const options = {
+    apihost: 'http://host.docker.internal:3233',
+    api_key: '23bc46b1-71f6-4ed5-8c54-816aa4f8c502:123zO3xZCLrMN6v2BKK1dXYFpXlPkccOFqm12CdAsMgRU4VrNZ9lyGVCGuMDGIwP',
+    namespace: '_',
+    ignore_certs: true,
+};
+
+const ow = openwhisk(options);
+
+
 async function main() {
     try {
         const client = await connectDB();
@@ -25,12 +36,9 @@ async function main() {
             
             if (currentData.precio < product.price) {
                 const mensaje = `¡Bajada de precio! ${product.name} ahora cuesta ${currentData.precio}€ (antes ${product.price}€)\nURL: ${product.url}`;
-                await notificador.main({ mensaje });
                 
-                await client.query(
-                    'UPDATE products SET price = $1 WHERE id = $2',
-                    [currentData.precio, product.id]
-                );
+                await ow.actions.invoke({ name: 'lib/enviarNotificacion', params: { mensaje } });
+                return { message: 'Bajada de precio' };
             }
         }
         
diff --git a/manifest.yaml b/manifest.yaml
index d4e3d37..b4fd6cd 100644
--- a/manifest.yaml
+++ b/manifest.yaml
@@ -8,12 +8,15 @@ project:
         addProduct: 
           location: dist/addProduct.js
           runtime: nodejs:default
+        deleteProduct:
+          location: dist/deleteProduct.js
+          runtime: nodejs:default
         scraper:
           location: dist/scraper.js
           runtime: nodejs:default
         enviarNotificacion:
           location: dist/enviarNotificacion.js
           runtime: nodejs:default
-        Periodo:
-          location: dist/Periodo.js
+        runtime:
+          location: dist/runtime.js
           runtime: nodejs:default
diff --git a/webpack.config.js b/webpack.config.js
index d309f6d..440a5cb 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -7,7 +7,8 @@ module.exports = {
         addProduct: './lib/addProduct.js',
         scraper: './lib/scraper.js',
         enviarNotificacion: './lib/enviarNotificacion.js',
-        Periodo: './lib/Periodo.js',
+        runtime: './lib/runtime.js',
+        deleteProduct: './lib/deleteProduct.js',
     },
     output: {
         path: path.resolve(__dirname, 'dist'),

commit 7b682ca10bb7f31476e874b8f3283df017aec99b
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Sat Jan 11 20:06:29 2025 +0100

    Testing de frecuencia

diff --git a/README.md b/README.md
index 07b08b3..bd140c9 100644
--- a/README.md
+++ b/README.md
@@ -1,40 +1,25 @@
-Para probar:
-
-wsk project deploy
-
-wsk action invoke /guest/chollometro2/testeos -r
-
-Ya no es necesaria la compilacion, usa: https://mega.co.nz/#!0g0XkJiQ!Lk7XCyGwi_R1E_NhoXnL_k3ZrHhO1h0tOW18Wa9G44I
+# Openwhisk RSE
 
-Para ejectuar(CMD):
-1. abrir docker desktop
-2. java -jar .\openwhisk-standalone.jar
-3. wsk.exe project deploy
-4. (Para probar) http://localhost:3233/api/v1/web/guest/chollometro2/hola-mundo
-o
-5. wsk action invoke chollometro2/hola-mundo -r
-
-Pido perdon por cambiar la rama por defecto a main, habia intentado poner LFS pero no me funcionaba.
-
-Compilacion:
-
-Necesita java, su SDK, docker y node para compilar
+Para probar:
 
-Dejo WSK.exe que es la CLI
+1. docker run -it -v /var/run/docker.sock:/var/run/docker.sock -p 3233:3233 -p 3232:3232 openwhisk/standalone:8f8a4aa 
 
+2. docker run -d --name my-postgres-db -e POSTGRES_USER=rse_user -e POSTGRES_PASSWORD=rse_password -e POSTGRES_DB=mydb -p 5432:5432 -v postgres_data:/var/lib/postgresql/data postgres:latest
 
-NUEVA DOCU
+3. cd owisk
 
+4. npm install
 
-docker run -it -v /var/run/docker.sock:/var/run/docker.sock -p 3233:3233 -p 3232:3232 openwhisk/standalone:8f8a4aa 
+5. webpack
 
+6. wsk project deploy
 
-docker run -d --name my-postgres-db -e POSTGRES_USER=rse_user -e POSTGRES_PASSWORD=rse_password-e POSTGRES_DB=mydb -p 5432:5432 -v postgres_data:/var/lib/postgresql/data postgres:latest
+7. wsk action invoke lib/scraper -r -p "url" "https://deplatec.com/torres-gaming/63909-pctec-gaming-ga5-ryzen-5-5500-32gb-1tb-rtx-4060-ti.html"
 
-npm install
+8. wsk action invoke lib/enviarNotificacion -r -p "mensaje" "Hola, esto es una prueba"
 
-webpack
+9. wsk action invoke lib/addProduct -r -p "name" "Nombre del producto" -p  "price" "Precio del producto" -p "url" "URL del producto"
 
-wsk project deploy
+##NOTA:
 
-wsk action invoke lib/scraper -r -p "url" "https://deplatec.com/torres-gaming/63909-pctec-gaming-ga5-ryzen-5-5500-32gb-1tb-rtx-4060-ti.html"
\ No newline at end of file
+Dejo WSK.exe que es la CLI de openwhisk para windows.
diff --git a/lib/Periodo.js b/lib/Periodo.js
new file mode 100644
index 0000000..05c740f
--- /dev/null
+++ b/lib/Periodo.js
@@ -0,0 +1,46 @@
+const { Client } = require('pg');
+const scraper = require('./scraper');
+const notificador = require('./enviarNotificacion');
+
+async function connectDB() {
+    const client = new Client({
+        user: 'rse_user',
+        host: 'localhost',
+        database: 'mydb',
+        password: 'rse_password',
+        port: 5432,
+    });
+    await client.connect();
+    return client;
+}
+
+async function main() {
+    try {
+        const client = await connectDB();
+        
+        const result = await client.query('SELECT * FROM products');
+        
+        for (const product of result.rows) {
+            const currentData = await scraper.main({ url: product.url });
+            
+            if (currentData.precio < product.price) {
+                const mensaje = `¡Bajada de precio! ${product.name} ahora cuesta ${currentData.precio}€ (antes ${product.price}€)\nURL: ${product.url}`;
+                await notificador.main({ mensaje });
+                
+                await client.query(
+                    'UPDATE products SET price = $1 WHERE id = $2',
+                    [currentData.precio, product.id]
+                );
+            }
+        }
+        
+        await client.end();
+        return { message: 'Price check completed successfully' };
+        
+    } catch (error) {
+        console.error('Error checking prices:', error);
+        return { error: error.message };
+    }
+}
+
+module.exports.main = main; 
\ No newline at end of file
diff --git a/manifest.yaml b/manifest.yaml
index c299569..d4e3d37 100644
--- a/manifest.yaml
+++ b/manifest.yaml
@@ -14,3 +14,6 @@ project:
         enviarNotificacion:
           location: dist/enviarNotificacion.js
           runtime: nodejs:default
+        Periodo:
+          location: dist/Periodo.js
+          runtime: nodejs:default
diff --git a/webpack.config.js b/webpack.config.js
index 0fae42e..d309f6d 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -7,6 +7,7 @@ module.exports = {
         addProduct: './lib/addProduct.js',
         scraper: './lib/scraper.js',
         enviarNotificacion: './lib/enviarNotificacion.js',
+        Periodo: './lib/Periodo.js',
     },
     output: {
         path: path.resolve(__dirname, 'dist'),

commit 22717081a33d491f41d42d25e46752f10d839ed5
Author: Jefferson Caiza <jpcaijam@upv.edu.es>
Date:   Sat Jan 11 19:06:31 2025 +0100

    docker compose for psql

diff --git a/docker-compose.yaml b/docker-compose.yaml
new file mode 100644
index 0000000..ed345de
--- /dev/null
+++ b/docker-compose.yaml
@@ -0,0 +1,21 @@
+
+services:
+  postgres:
+    image: postgres:17.2-alpine3.21
+    container_name: my-postgres-db
+    ports:
+      - "5432:5432"
+    environment:
+      POSTGRES_USER: rse_user
+      POSTGRES_PASSWORD: rse_password
+      POSTGRES_DB: mydb
+    volumes:
+      - postgres_data:/var/lib/postgresql/data
+    networks:
+      - openwhisk-net
+
+volumes:
+  postgres_data:
+networks:
+  openwhisk-net:
+    driver: bridge
\ No newline at end of file

commit 26c0e26411166cc92ad3766b39275c75b1773c1f
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Sat Jan 11 19:02:14 2025 +0100

    ajustada enviarNotificacion

diff --git a/lib/enviarNotificacion.js b/lib/enviarNotificacion.js
index 1b20fb6..b5f5c57 100644
--- a/lib/enviarNotificacion.js
+++ b/lib/enviarNotificacion.js
@@ -1,8 +1,13 @@
-async function enviarNotificacionDiscord(mensaje) {
-    const webhookUrl = 'webhookPlaceholderPreOW';
+async function main(params) {
+    if (!params || !params.mensaje) {
+        console.error('Usage: node enviarNotificacion.js <mensaje>');
+        return { error: 'Missing required parameters' }; 
+    }
+    const {mensaje} = params;
+    const webhookUrl = 'localhost';
 
     try {
-        const response = await fetch(webhookUrl, {
+        /*const response = await fetch(webhookUrl, {
             method: 'POST',
             headers: {
                 'Content-Type': 'application/json',
@@ -11,18 +16,14 @@ async function enviarNotificacionDiscord(mensaje) {
                 content: mensaje
             })
         });
-
         if (!response.ok) {
             throw new Error(`Error HTTP: ${response.status}`);
-        }
-        
-        return true;
+        }*/
+        return {mensaje: mensaje};
     } catch (error) {
         console.error('Error al enviar notificación a openwhisk:', error);
-        return false;
+        return {mensaje: 'Error al enviar notificación a openwhisk'};
     }
 }
 
-module.exports = {
-    enviarNotificacionDiscord
-};
+module.exports.main = main;
diff --git a/lib/scraper.js b/lib/scraper.js
index 629b80e..e64a7c2 100644
--- a/lib/scraper.js
+++ b/lib/scraper.js
@@ -1,34 +1,18 @@
 const cheerio = require('cheerio');
 
-async function main(params) {
-  if (!params || !params.url) {
-    console.error('Usage: node scraper.js <url>');
-    return { error: 'Missing required parameters' }; 
-  }
-
-  const {url} = params;
-
-  async function obtenerDatosProducto(urlProducto) {
-    const $ = cheerio.load(await (await fetch(urlProducto)).text());
+  async function main(params) {
+    if (!params || !params.url) {
+      console.error('Usage: node scraper.js <url>');
+      return { error: 'Missing required parameters' }; 
+    }
+  
+    const {url} = params;
+    
+    const $ = cheerio.load(await (await fetch(url)).text());
     const nombre = $('h1.page-title').text().trim();
     const precioTexto = $('.product-price.current-price-value').text().trim();
     const precio = parseFloat(precioTexto.replace(/[^0-9,.]/g, '').replace(',', '.'));
     return { nombre, precio };
-  }
-
-  if (Array.isArray(url)) {
-    const promesas = url.map(async ({ id, url}) => {
-      try {
-        const datos = await obtenerDatosProducto(url);
-        return { id, url, ...datos };
-      } catch (error) {
-        return { id, url, error: error.message };
-      }
-    });
-    return Promise.all(promesas);
-  }
-
-  return obtenerDatosProducto(url);
 }
 
 module.exports.main = main;
\ No newline at end of file
diff --git a/manifest.yaml b/manifest.yaml
index ff5d234..c299569 100644
--- a/manifest.yaml
+++ b/manifest.yaml
@@ -11,3 +11,6 @@ project:
         scraper:
           location: dist/scraper.js
           runtime: nodejs:default
+        enviarNotificacion:
+          location: dist/enviarNotificacion.js
+          runtime: nodejs:default
diff --git a/webpack.config.js b/webpack.config.js
index 0bcc130..0fae42e 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -6,6 +6,7 @@ module.exports = {
     entry: {
         addProduct: './lib/addProduct.js',
         scraper: './lib/scraper.js',
+        enviarNotificacion: './lib/enviarNotificacion.js',
     },
     output: {
         path: path.resolve(__dirname, 'dist'),

commit 9f5a43465041225370a543ec8096bdca792421c7
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Sat Jan 11 18:48:36 2025 +0100

    arreglado scraper

diff --git a/README.md b/README.md
index 48036d7..07b08b3 100644
--- a/README.md
+++ b/README.md
@@ -29,4 +29,12 @@ NUEVA DOCU
 docker run -it -v /var/run/docker.sock:/var/run/docker.sock -p 3233:3233 -p 3232:3232 openwhisk/standalone:8f8a4aa 
 
 
-docker run -d --name my-postgres-db -e POSTGRES_USER=rse_user -e POSTGRES_PASSWORD=rse_password-e POSTGRES_DB=mydb -p 5432:5432 -v postgres_data:/var/lib/postgresql/data postgres:latest
\ No newline at end of file
+docker run -d --name my-postgres-db -e POSTGRES_USER=rse_user -e POSTGRES_PASSWORD=rse_password-e POSTGRES_DB=mydb -p 5432:5432 -v postgres_data:/var/lib/postgresql/data postgres:latest
+
+npm install
+
+webpack
+
+wsk project deploy
+
+wsk action invoke lib/scraper -r -p "url" "https://deplatec.com/torres-gaming/63909-pctec-gaming-ga5-ryzen-5-5500-32gb-1tb-rtx-4060-ti.html"
\ No newline at end of file
diff --git a/lib/scraper.js b/lib/scraper.js
index d97366d..629b80e 100644
--- a/lib/scraper.js
+++ b/lib/scraper.js
@@ -1,19 +1,25 @@
 const cheerio = require('cheerio');
-const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));
 
-async function main(url, elementoWeb) {
-  async function obtenerDatosProducto(urlProducto, selectores) {
+async function main(params) {
+  if (!params || !params.url) {
+    console.error('Usage: node scraper.js <url>');
+    return { error: 'Missing required parameters' }; 
+  }
+
+  const {url} = params;
+
+  async function obtenerDatosProducto(urlProducto) {
     const $ = cheerio.load(await (await fetch(urlProducto)).text());
-    const nombre = $(selectores.nombre).text().trim();
-    const precioTexto = $(selectores.precio).text().trim();
+    const nombre = $('h1.page-title').text().trim();
+    const precioTexto = $('.product-price.current-price-value').text().trim();
     const precio = parseFloat(precioTexto.replace(/[^0-9,.]/g, '').replace(',', '.'));
     return { nombre, precio };
   }
 
   if (Array.isArray(url)) {
-    const promesas = url.map(async ({ id, url, elementoWeb }) => {
+    const promesas = url.map(async ({ id, url}) => {
       try {
-        const datos = await obtenerDatosProducto(url, elementoWeb);
+        const datos = await obtenerDatosProducto(url);
         return { id, url, ...datos };
       } catch (error) {
         return { id, url, error: error.message };
@@ -22,14 +28,7 @@ async function main(url, elementoWeb) {
     return Promise.all(promesas);
   }
 
-  return obtenerDatosProducto(url, elementoWeb);
+  return obtenerDatosProducto(url);
 }
 
-module.exports.main = main;
-
-main('https://deplatec.com/torres-gaming/63909-pctec-gaming-ga5-ryzen-5-5500-32gb-1tb-rtx-4060-ti.html', {
-  nombre: 'h1.page-title',
-  precio: '.product-price.current-price-value'
-})
-.then(resultado => console.log(resultado))
-.catch(error => console.error(error));
\ No newline at end of file
+module.exports.main = main;
\ No newline at end of file

commit e116282da65787c4bff446a682efb48a49fde0e2
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Sat Jan 11 18:23:50 2025 +0100

    nueva funcion scraper ajustada

diff --git a/lib/scraper.js b/lib/scraper.js
index ff810d0..d97366d 100644
--- a/lib/scraper.js
+++ b/lib/scraper.js
@@ -1,7 +1,7 @@
 const cheerio = require('cheerio');
 const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));
 
-async function scraper(url, elementoWeb) {
+async function main(url, elementoWeb) {
   async function obtenerDatosProducto(urlProducto, selectores) {
     const $ = cheerio.load(await (await fetch(urlProducto)).text());
     const nombre = $(selectores.nombre).text().trim();
@@ -25,11 +25,9 @@ async function scraper(url, elementoWeb) {
   return obtenerDatosProducto(url, elementoWeb);
 }
 
-module.exports = {
-  scraper,
-};
+module.exports.main = main;
 
-scraper('https://deplatec.com/torres-gaming/63909-pctec-gaming-ga5-ryzen-5-5500-32gb-1tb-rtx-4060-ti.html', {
+main('https://deplatec.com/torres-gaming/63909-pctec-gaming-ga5-ryzen-5-5500-32gb-1tb-rtx-4060-ti.html', {
   nombre: 'h1.page-title',
   precio: '.product-price.current-price-value'
 })
diff --git a/manifest.yaml b/manifest.yaml
index 025956e..ff5d234 100644
--- a/manifest.yaml
+++ b/manifest.yaml
@@ -8,3 +8,6 @@ project:
         addProduct: 
           location: dist/addProduct.js
           runtime: nodejs:default
+        scraper:
+          location: dist/scraper.js
+          runtime: nodejs:default
diff --git a/package-lock.json b/package-lock.json
index b740b87..316edc6 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -1,11 +1,11 @@
 {
-  "name": "chollometro2",
+  "name": "openwhisk",
   "version": "1.0.0",
   "lockfileVersion": 3,
   "requires": true,
   "packages": {
     "": {
-      "name": "chollometro2",
+      "name": "openwhisk",
       "version": "1.0.0",
       "license": "ASD",
       "dependencies": {
diff --git a/webpack.config.js b/webpack.config.js
index 6978060..0bcc130 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -5,6 +5,7 @@ module.exports = {
     target: 'node',
     entry: {
         addProduct: './lib/addProduct.js',
+        scraper: './lib/scraper.js',
     },
     output: {
         path: path.resolve(__dirname, 'dist'),

commit ea57e6e2c70dd9e241b53d2e8d3215e958a4ff2e
Author: Jefferson Caiza <jpcaijam@upv.edu.es>
Date:   Sat Jan 11 18:08:33 2025 +0100

    addProduct with openwhisk

diff --git a/.gitignore b/.gitignore
index defd3bd..e8ae780 100644
--- a/.gitignore
+++ b/.gitignore
@@ -139,4 +139,5 @@ dist
 
 #Propios
 wsk
-wskdeploy
\ No newline at end of file
+wskdeploy
+dist/
\ No newline at end of file
diff --git a/README.md b/README.md
index 13a94f6..48036d7 100644
--- a/README.md
+++ b/README.md
@@ -29,5 +29,4 @@ NUEVA DOCU
 docker run -it -v /var/run/docker.sock:/var/run/docker.sock -p 3233:3233 -p 3232:3232 openwhisk/standalone:8f8a4aa 
 
 
-docker run -d --name my-postgres-db -e POSTGRES_USER=rse_user -e POSTGRES_PASSWORD=rse_password-e POSTGRES_DB=owhiskdb \ 
--p 5432:5432 -v postgres_data:/var/lib/postgresql/data postgres:latest
\ No newline at end of file
+docker run -d --name my-postgres-db -e POSTGRES_USER=rse_user -e POSTGRES_PASSWORD=rse_password-e POSTGRES_DB=mydb -p 5432:5432 -v postgres_data:/var/lib/postgresql/data postgres:latest
\ No newline at end of file
diff --git a/lib/addProduct.js b/lib/addProduct.js
index 2535793..070585f 100644
--- a/lib/addProduct.js
+++ b/lib/addProduct.js
@@ -3,8 +3,8 @@ const { Client } = require('pg');
 async function connectDB() {
     const client = new Client({
       user: 'rse_user',
-      host: 'localhost',
-      database: 'owhiskdb',
+      host: '172.17.0.6',  
+      database: 'mydb',
       password: 'rse_password',
       port: 5432,
     });
@@ -12,13 +12,14 @@ async function connectDB() {
     return client;
 }
 
-async function main(args) {
-    if (!args || args.length < 3) {
+async function main(params) {  
+    if (!params || !params.name || !params.price || !params.url) {
         console.error('Usage: node addProduct.js <name> <price> <url>');
-        process.exit(1);
+        return { error: 'Missing required parameters' }; 
     }
 
-    const [name, price, url] = args;
+    const { name, price, url } = params; 
+
 
     try {
         const client = await connectDB();
@@ -40,16 +41,12 @@ async function main(args) {
         console.log('Product added successfully:', res.rows[0]);
         
         await client.end();
-        return res.rows[0];
+
+        return { result: res.rows[0] }; 
     } catch (err) {
         console.error('Error adding product:', err);
-        process.exit(1);
+        return { error: err.message }; 
     }
 }
 
-// Execute main function with command line arguments
-if (require.main === module) {
-    main(process.argv.slice(2)).catch(console.error);
-}
-
-module.exports = { main };
\ No newline at end of file
+module.exports.main = main; 
\ No newline at end of file
diff --git a/manifest.yaml b/manifest.yaml
index 1bcbdbc..025956e 100644
--- a/manifest.yaml
+++ b/manifest.yaml
@@ -1,41 +1,10 @@
-packages:
-  chollometro2:
-    version: 1.0.0
-    license: No se, abstenganse abogados
-    actions:
-      testeos:
-        function: utilidades/testeos.js
-        runtime: nodejs:18
-        annotations:
-          web-export: true
-      verificar-precios:
-        function: acciones/programadas/verificar_precios.js
-        runtime: nodejs:18
-        annotations:
-          web-export: true
-      obtener-info-producto:
-        function: acciones/bajo_demanda/obtener_info_producto.js
-        runtime: nodejs:18
-        annotations:
-          web-export: true
-      agregar-producto:
-        function: acciones/bajo_demanda/agregar_producto.js
-        runtime: nodejs:18
-        annotations:
-          web-export: true
-      actualizar-precio:
-        function: acciones/internas/actualizar_precio.js
-        runtime: nodejs:18
-      enviar-alerta:
-        function: acciones/notificaciones/enviar_alerta.js
-        runtime: nodejs:18
-      hola-mundo:
-        function: acciones/hola_mundo.js
-        runtime: nodejs:18
-        annotations:
-          web-export: true
-    sequences:
-      verificar-y-notificar:
-        actions: obtener-info-producto,actualizar-precio,enviar-alerta
-        annotations:
-          web-export: true
\ No newline at end of file
+project: 
+  name: owhisk
+  namespace: _
+  packages:
+    lib: 
+      version: 1.0.0
+      actions: 
+        addProduct: 
+          location: dist/addProduct.js
+          runtime: nodejs:default
diff --git a/package-lock.json b/package-lock.json
index b53c7dd..b740b87 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -7,11 +7,12 @@
     "": {
       "name": "chollometro2",
       "version": "1.0.0",
-      "license": "No se, abstenganse abogados",
+      "license": "ASD",
       "dependencies": {
         "cheerio": "^1.0.0",
         "mongodb": "^6.3.0",
-        "node-fetch": "^2.7.0"
+        "node-fetch": "^2.7.0",
+        "pg": "^8.13.1"
       }
     },
     "node_modules/@mongodb-js/saslprep": {
@@ -387,6 +388,122 @@
         "url": "https://github.com/inikulin/parse5?sponsor=1"
       }
     },
+    "node_modules/pg": {
+      "version": "8.13.1",
+      "resolved": "https://registry.npmjs.org/pg/-/pg-8.13.1.tgz",
+      "integrity": "sha512-OUir1A0rPNZlX//c7ksiu7crsGZTKSOXJPgtNiHGIlC9H0lO+NC6ZDYksSgBYY/thSWhnSRBv8w1lieNNGATNQ==",
+      "dependencies": {
+        "pg-connection-string": "^2.7.0",
+        "pg-pool": "^3.7.0",
+        "pg-protocol": "^1.7.0",
+        "pg-types": "^2.1.0",
+        "pgpass": "1.x"
+      },
+      "engines": {
+        "node": ">= 8.0.0"
+      },
+      "optionalDependencies": {
+        "pg-cloudflare": "^1.1.1"
+      },
+      "peerDependencies": {
+        "pg-native": ">=3.0.1"
+      },
+      "peerDependenciesMeta": {
+        "pg-native": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/pg-cloudflare": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/pg-cloudflare/-/pg-cloudflare-1.1.1.tgz",
+      "integrity": "sha512-xWPagP/4B6BgFO+EKz3JONXv3YDgvkbVrGw2mTo3D6tVDQRh1e7cqVGvyR3BE+eQgAvx1XhW/iEASj4/jCWl3Q==",
+      "optional": true
+    },
+    "node_modules/pg-connection-string": {
+      "version": "2.7.0",
+      "resolved": "https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.7.0.tgz",
+      "integrity": "sha512-PI2W9mv53rXJQEOb8xNR8lH7Hr+EKa6oJa38zsK0S/ky2er16ios1wLKhZyxzD7jUReiWokc9WK5nxSnC7W1TA=="
+    },
+    "node_modules/pg-int8": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/pg-int8/-/pg-int8-1.0.1.tgz",
+      "integrity": "sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==",
+      "engines": {
+        "node": ">=4.0.0"
+      }
+    },
+    "node_modules/pg-pool": {
+      "version": "3.7.0",
+      "resolved": "https://registry.npmjs.org/pg-pool/-/pg-pool-3.7.0.tgz",
+      "integrity": "sha512-ZOBQForurqh4zZWjrgSwwAtzJ7QiRX0ovFkZr2klsen3Nm0aoh33Ls0fzfv3imeH/nw/O27cjdz5kzYJfeGp/g==",
+      "peerDependencies": {
+        "pg": ">=8.0"
+      }
+    },
+    "node_modules/pg-protocol": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.7.0.tgz",
+      "integrity": "sha512-hTK/mE36i8fDDhgDFjy6xNOG+LCorxLG3WO17tku+ij6sVHXh1jQUJ8hYAnRhNla4QVD2H8er/FOjc/+EgC6yQ=="
+    },
+    "node_modules/pg-types": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/pg-types/-/pg-types-2.2.0.tgz",
+      "integrity": "sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==",
+      "dependencies": {
+        "pg-int8": "1.0.1",
+        "postgres-array": "~2.0.0",
+        "postgres-bytea": "~1.0.0",
+        "postgres-date": "~1.0.4",
+        "postgres-interval": "^1.1.0"
+      },
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/pgpass": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/pgpass/-/pgpass-1.0.5.tgz",
+      "integrity": "sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==",
+      "dependencies": {
+        "split2": "^4.1.0"
+      }
+    },
+    "node_modules/postgres-array": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/postgres-array/-/postgres-array-2.0.0.tgz",
+      "integrity": "sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==",
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/postgres-bytea": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz",
+      "integrity": "sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/postgres-date": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz",
+      "integrity": "sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/postgres-interval": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz",
+      "integrity": "sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==",
+      "dependencies": {
+        "xtend": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
     "node_modules/punycode": {
       "version": "2.3.1",
       "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
@@ -411,6 +528,14 @@
         "memory-pager": "^1.0.2"
       }
     },
+    "node_modules/split2": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/split2/-/split2-4.2.0.tgz",
+      "integrity": "sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==",
+      "engines": {
+        "node": ">= 10.x"
+      }
+    },
     "node_modules/tr46": {
       "version": "4.1.1",
       "resolved": "https://registry.npmjs.org/tr46/-/tr46-4.1.1.tgz",
@@ -474,6 +599,14 @@
       "engines": {
         "node": ">=16"
       }
+    },
+    "node_modules/xtend": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
+      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
+      "engines": {
+        "node": ">=0.4"
+      }
     }
   }
 }
diff --git a/package.json b/package.json
index 9dde4f9..b76ace4 100644
--- a/package.json
+++ b/package.json
@@ -1,5 +1,5 @@
 {
-  "name": "chollometro2",
+  "name": "openwhisk",
   "version": "1.0.0",
   "description": "Nombre pendiente",
   "main": "index.js",
@@ -11,10 +11,11 @@
     "ofertas"
   ],
   "author": "SIF",
-  "license": "No se, abstenganse abogados",
+  "license": "ASD",
   "dependencies": {
     "cheerio": "^1.0.0",
     "mongodb": "^6.3.0",
-    "node-fetch": "^2.7.0"
+    "node-fetch": "^2.7.0",
+    "pg": "^8.13.1"
   }
 }
diff --git a/webpack.config.js b/webpack.config.js
new file mode 100644
index 0000000..6978060
--- /dev/null
+++ b/webpack.config.js
@@ -0,0 +1,14 @@
+const path = require('path');
+
+module.exports = {
+    mode: 'production',
+    target: 'node',
+    entry: {
+        addProduct: './lib/addProduct.js',
+    },
+    output: {
+        path: path.resolve(__dirname, 'dist'),
+        filename: '[name].js',
+        libraryTarget: 'commonjs2', // Asegúrate de que las exportaciones son compatibles con Node.js
+    },
+};

commit ff5abb3e300b4ee5b6e7774edcd95f641e811b17
Author: Jefferson Caiza <jpcaijam@upv.edu.es>
Date:   Sat Jan 11 16:49:03 2025 +0100

    Nueva docu y action addProduct

diff --git a/.gitignore b/.gitignore
index 53737e1..defd3bd 100644
--- a/.gitignore
+++ b/.gitignore
@@ -136,3 +136,7 @@ dist
 .yarn/build-state.yml
 .yarn/install-state.gz
 .pnp.*
+
+#Propios
+wsk
+wskdeploy
\ No newline at end of file
diff --git a/README.md b/README.md
index e24c5b9..13a94f6 100644
--- a/README.md
+++ b/README.md
@@ -21,3 +21,13 @@ Compilacion:
 Necesita java, su SDK, docker y node para compilar
 
 Dejo WSK.exe que es la CLI
+
+
+NUEVA DOCU
+
+
+docker run -it -v /var/run/docker.sock:/var/run/docker.sock -p 3233:3233 -p 3232:3232 openwhisk/standalone:8f8a4aa 
+
+
+docker run -d --name my-postgres-db -e POSTGRES_USER=rse_user -e POSTGRES_PASSWORD=rse_password-e POSTGRES_DB=owhiskdb \ 
+-p 5432:5432 -v postgres_data:/var/lib/postgresql/data postgres:latest
\ No newline at end of file
diff --git a/lib/addProduct.js b/lib/addProduct.js
new file mode 100644
index 0000000..2535793
--- /dev/null
+++ b/lib/addProduct.js
@@ -0,0 +1,55 @@
+const { Client } = require('pg');
+
+async function connectDB() {
+    const client = new Client({
+      user: 'rse_user',
+      host: 'localhost',
+      database: 'owhiskdb',
+      password: 'rse_password',
+      port: 5432,
+    });
+    await client.connect();
+    return client;
+}
+
+async function main(args) {
+    if (!args || args.length < 3) {
+        console.error('Usage: node addProduct.js <name> <price> <url>');
+        process.exit(1);
+    }
+
+    const [name, price, url] = args;
+
+    try {
+        const client = await connectDB();
+
+        await client.query(`
+            CREATE TABLE IF NOT EXISTS products (
+            id SERIAL PRIMARY KEY,
+            name VARCHAR(100),
+            price DECIMAL(10,2) NOT NULL,
+            url TEXT
+            )
+        `);
+        const query = {
+            text: 'INSERT INTO products(name, price, url) VALUES($1, $2, $3) RETURNING *',
+            values: [name, price, url],
+        };
+
+        const res = await client.query(query);
+        console.log('Product added successfully:', res.rows[0]);
+        
+        await client.end();
+        return res.rows[0];
+    } catch (err) {
+        console.error('Error adding product:', err);
+        process.exit(1);
+    }
+}
+
+// Execute main function with command line arguments
+if (require.main === module) {
+    main(process.argv.slice(2)).catch(console.error);
+}
+
+module.exports = { main };
\ No newline at end of file

commit 2799d58696ca9eb7b818b9aa81722e44eaddd729
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Sat Jan 11 16:47:41 2025 +0100

    gitignore

diff --git a/.gitignore b/.gitignore
index 1170717..53737e1 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,3 +1,5 @@
+openwhisk-standalone.jar
+
 # Logs
 logs
 *.log

commit 96347c9a505ba3d4ef257e381d3a2a7561e0eeff
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Sat Jan 11 16:42:48 2025 +0100

    arreglado scrapper + paquetes

diff --git a/lib/scraper.js b/lib/scraper.js
index 648b55a..ff810d0 100644
--- a/lib/scraper.js
+++ b/lib/scraper.js
@@ -6,7 +6,6 @@ async function scraper(url, elementoWeb) {
     const $ = cheerio.load(await (await fetch(urlProducto)).text());
     const nombre = $(selectores.nombre).text().trim();
     const precioTexto = $(selectores.precio).text().trim();
-    console.log(precioTexto);
     const precio = parseFloat(precioTexto.replace(/[^0-9,.]/g, '').replace(',', '.'));
     return { nombre, precio };
   }
@@ -28,4 +27,11 @@ async function scraper(url, elementoWeb) {
 
 module.exports = {
   scraper,
-};
\ No newline at end of file
+};
+
+scraper('https://deplatec.com/torres-gaming/63909-pctec-gaming-ga5-ryzen-5-5500-32gb-1tb-rtx-4060-ti.html', {
+  nombre: 'h1.page-title',
+  precio: '.product-price.current-price-value'
+})
+.then(resultado => console.log(resultado))
+.catch(error => console.error(error));
\ No newline at end of file
diff --git a/lib/scrapperDeplatec.js b/lib/scrapperDeplatec.js
deleted file mode 100644
index 0fdf200..0000000
--- a/lib/scrapperDeplatec.js
+++ /dev/null
@@ -1,8 +0,0 @@
-const { scraper } = require('./scraper');
-
-scraper('https://deplatec.com/torres-gaming/63909-pctec-gaming-ga5-ryzen-5-5500-32gb-1tb-rtx-4060-ti.html', {
-    nombre: 'h1.page-title',
-    precio: '.product-price.current-price-value'
-})
-.then(resultado => console.log(resultado))
-.catch(error => console.error(error));
\ No newline at end of file
diff --git a/package-lock.json b/package-lock.json
new file mode 100644
index 0000000..b53c7dd
--- /dev/null
+++ b/package-lock.json
@@ -0,0 +1,479 @@
+{
+  "name": "chollometro2",
+  "version": "1.0.0",
+  "lockfileVersion": 3,
+  "requires": true,
+  "packages": {
+    "": {
+      "name": "chollometro2",
+      "version": "1.0.0",
+      "license": "No se, abstenganse abogados",
+      "dependencies": {
+        "cheerio": "^1.0.0",
+        "mongodb": "^6.3.0",
+        "node-fetch": "^2.7.0"
+      }
+    },
+    "node_modules/@mongodb-js/saslprep": {
+      "version": "1.1.9",
+      "resolved": "https://registry.npmjs.org/@mongodb-js/saslprep/-/saslprep-1.1.9.tgz",
+      "integrity": "sha512-tVkljjeEaAhCqTzajSdgbQ6gE6f3oneVwa3iXR6csiEwXXOFsiC6Uh9iAjAhXPtqa/XMDHWjjeNH/77m/Yq2dw==",
+      "license": "MIT",
+      "dependencies": {
+        "sparse-bitfield": "^3.0.3"
+      }
+    },
+    "node_modules/@types/webidl-conversions": {
+      "version": "7.0.3",
+      "resolved": "https://registry.npmjs.org/@types/webidl-conversions/-/webidl-conversions-7.0.3.tgz",
+      "integrity": "sha512-CiJJvcRtIgzadHCYXw7dqEnMNRjhGZlYK05Mj9OyktqV8uVT8fD2BFOB7S1uwBE3Kj2Z+4UyPmFw/Ixgw/LAlA==",
+      "license": "MIT"
+    },
+    "node_modules/@types/whatwg-url": {
+      "version": "11.0.5",
+      "resolved": "https://registry.npmjs.org/@types/whatwg-url/-/whatwg-url-11.0.5.tgz",
+      "integrity": "sha512-coYR071JRaHa+xoEvvYqvnIHaVqaYrLPbsufM9BF63HkwI5Lgmy2QR8Q5K/lYDYo5AK82wOvSOS0UsLTpTG7uQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@types/webidl-conversions": "*"
+      }
+    },
+    "node_modules/boolbase": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
+      "integrity": "sha512-JZOSA7Mo9sNGB8+UjSgzdLtokWAky1zbztM3WRLCbZ70/3cTANmQmOdR7y2g+J0e2WXywy1yS468tY+IruqEww==",
+      "license": "ISC"
+    },
+    "node_modules/bson": {
+      "version": "6.10.1",
+      "resolved": "https://registry.npmjs.org/bson/-/bson-6.10.1.tgz",
+      "integrity": "sha512-P92xmHDQjSKPLHqFxefqMxASNq/aWJMEZugpCjf+AF/pgcUpMMQCg7t7+ewko0/u8AapvF3luf/FoehddEK+sA==",
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">=16.20.1"
+      }
+    },
+    "node_modules/cheerio": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/cheerio/-/cheerio-1.0.0.tgz",
+      "integrity": "sha512-quS9HgjQpdaXOvsZz82Oz7uxtXiy6UIsIQcpBj7HRw2M63Skasm9qlDocAM7jNuaxdhpPU7c4kJN+gA5MCu4ww==",
+      "license": "MIT",
+      "dependencies": {
+        "cheerio-select": "^2.1.0",
+        "dom-serializer": "^2.0.0",
+        "domhandler": "^5.0.3",
+        "domutils": "^3.1.0",
+        "encoding-sniffer": "^0.2.0",
+        "htmlparser2": "^9.1.0",
+        "parse5": "^7.1.2",
+        "parse5-htmlparser2-tree-adapter": "^7.0.0",
+        "parse5-parser-stream": "^7.1.2",
+        "undici": "^6.19.5",
+        "whatwg-mimetype": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=18.17"
+      },
+      "funding": {
+        "url": "https://github.com/cheeriojs/cheerio?sponsor=1"
+      }
+    },
+    "node_modules/cheerio-select": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/cheerio-select/-/cheerio-select-2.1.0.tgz",
+      "integrity": "sha512-9v9kG0LvzrlcungtnJtpGNxY+fzECQKhK4EGJX2vByejiMX84MFNQw4UxPJl3bFbTMw+Dfs37XaIkCwTZfLh4g==",
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "boolbase": "^1.0.0",
+        "css-select": "^5.1.0",
+        "css-what": "^6.1.0",
+        "domelementtype": "^2.3.0",
+        "domhandler": "^5.0.3",
+        "domutils": "^3.0.1"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/fb55"
+      }
+    },
+    "node_modules/css-select": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/css-select/-/css-select-5.1.0.tgz",
+      "integrity": "sha512-nwoRF1rvRRnnCqqY7updORDsuqKzqYJ28+oSMaJMMgOauh3fvwHqMS7EZpIPqK8GL+g9mKxF1vP/ZjSeNjEVHg==",
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "boolbase": "^1.0.0",
+        "css-what": "^6.1.0",
+        "domhandler": "^5.0.2",
+        "domutils": "^3.0.1",
+        "nth-check": "^2.0.1"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/fb55"
+      }
+    },
+    "node_modules/css-what": {
+      "version": "6.1.0",
+      "resolved": "https://registry.npmjs.org/css-what/-/css-what-6.1.0.tgz",
+      "integrity": "sha512-HTUrgRJ7r4dsZKU6GjmpfRK1O76h97Z8MfS1G0FozR+oF2kG6Vfe8JE6zwrkbxigziPHinCJ+gCPjA9EaBDtRw==",
+      "license": "BSD-2-Clause",
+      "engines": {
+        "node": ">= 6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/fb55"
+      }
+    },
+    "node_modules/dom-serializer": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-2.0.0.tgz",
+      "integrity": "sha512-wIkAryiqt/nV5EQKqQpo3SToSOV9J0DnbJqwK7Wv/Trc92zIAYZ4FlMu+JPFW1DfGFt81ZTCGgDEabffXeLyJg==",
+      "license": "MIT",
+      "dependencies": {
+        "domelementtype": "^2.3.0",
+        "domhandler": "^5.0.2",
+        "entities": "^4.2.0"
+      },
+      "funding": {
+        "url": "https://github.com/cheeriojs/dom-serializer?sponsor=1"
+      }
+    },
+    "node_modules/domelementtype": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.3.0.tgz",
+      "integrity": "sha512-OLETBj6w0OsagBwdXnPdN0cnMfF9opN69co+7ZrbfPGrdpPVNBUj02spi6B1N7wChLQiPn4CSH/zJvXw56gmHw==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/fb55"
+        }
+      ],
+      "license": "BSD-2-Clause"
+    },
+    "node_modules/domhandler": {
+      "version": "5.0.3",
+      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-5.0.3.tgz",
+      "integrity": "sha512-cgwlv/1iFQiFnU96XXgROh8xTeetsnJiDsTc7TYCLFd9+/WNkIqPTxiM/8pSd8VIrhXGTf1Ny1q1hquVqDJB5w==",
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "domelementtype": "^2.3.0"
+      },
+      "engines": {
+        "node": ">= 4"
+      },
+      "funding": {
+        "url": "https://github.com/fb55/domhandler?sponsor=1"
+      }
+    },
+    "node_modules/domutils": {
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/domutils/-/domutils-3.2.2.tgz",
+      "integrity": "sha512-6kZKyUajlDuqlHKVX1w7gyslj9MPIXzIFiz/rGu35uC1wMi+kMhQwGhl4lt9unC9Vb9INnY9Z3/ZA3+FhASLaw==",
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "dom-serializer": "^2.0.0",
+        "domelementtype": "^2.3.0",
+        "domhandler": "^5.0.3"
+      },
+      "funding": {
+        "url": "https://github.com/fb55/domutils?sponsor=1"
+      }
+    },
+    "node_modules/encoding-sniffer": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/encoding-sniffer/-/encoding-sniffer-0.2.0.tgz",
+      "integrity": "sha512-ju7Wq1kg04I3HtiYIOrUrdfdDvkyO9s5XM8QAj/bN61Yo/Vb4vgJxy5vi4Yxk01gWHbrofpPtpxM8bKger9jhg==",
+      "license": "MIT",
+      "dependencies": {
+        "iconv-lite": "^0.6.3",
+        "whatwg-encoding": "^3.1.1"
+      },
+      "funding": {
+        "url": "https://github.com/fb55/encoding-sniffer?sponsor=1"
+      }
+    },
+    "node_modules/entities": {
+      "version": "4.5.0",
+      "resolved": "https://registry.npmjs.org/entities/-/entities-4.5.0.tgz",
+      "integrity": "sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==",
+      "license": "BSD-2-Clause",
+      "engines": {
+        "node": ">=0.12"
+      },
+      "funding": {
+        "url": "https://github.com/fb55/entities?sponsor=1"
+      }
+    },
+    "node_modules/htmlparser2": {
+      "version": "9.1.0",
+      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-9.1.0.tgz",
+      "integrity": "sha512-5zfg6mHUoaer/97TxnGpxmbR7zJtPwIYFMZ/H5ucTlPZhKvtum05yiPK3Mgai3a0DyVxv7qYqoweaEd2nrYQzQ==",
+      "funding": [
+        "https://github.com/fb55/htmlparser2?sponsor=1",
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/fb55"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "domelementtype": "^2.3.0",
+        "domhandler": "^5.0.3",
+        "domutils": "^3.1.0",
+        "entities": "^4.5.0"
+      }
+    },
+    "node_modules/iconv-lite": {
+      "version": "0.6.3",
+      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
+      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
+      "license": "MIT",
+      "dependencies": {
+        "safer-buffer": ">= 2.1.2 < 3.0.0"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/memory-pager": {
+      "version": "1.5.0",
+      "resolved": "https://registry.npmjs.org/memory-pager/-/memory-pager-1.5.0.tgz",
+      "integrity": "sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg==",
+      "license": "MIT"
+    },
+    "node_modules/mongodb": {
+      "version": "6.12.0",
+      "resolved": "https://registry.npmjs.org/mongodb/-/mongodb-6.12.0.tgz",
+      "integrity": "sha512-RM7AHlvYfS7jv7+BXund/kR64DryVI+cHbVAy9P61fnb1RcWZqOW1/Wj2YhqMCx+MuYhqTRGv7AwHBzmsCKBfA==",
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@mongodb-js/saslprep": "^1.1.9",
+        "bson": "^6.10.1",
+        "mongodb-connection-string-url": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=16.20.1"
+      },
+      "peerDependencies": {
+        "@aws-sdk/credential-providers": "^3.188.0",
+        "@mongodb-js/zstd": "^1.1.0 || ^2.0.0",
+        "gcp-metadata": "^5.2.0",
+        "kerberos": "^2.0.1",
+        "mongodb-client-encryption": ">=6.0.0 <7",
+        "snappy": "^7.2.2",
+        "socks": "^2.7.1"
+      },
+      "peerDependenciesMeta": {
+        "@aws-sdk/credential-providers": {
+          "optional": true
+        },
+        "@mongodb-js/zstd": {
+          "optional": true
+        },
+        "gcp-metadata": {
+          "optional": true
+        },
+        "kerberos": {
+          "optional": true
+        },
+        "mongodb-client-encryption": {
+          "optional": true
+        },
+        "snappy": {
+          "optional": true
+        },
+        "socks": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/mongodb-connection-string-url": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-3.0.1.tgz",
+      "integrity": "sha512-XqMGwRX0Lgn05TDB4PyG2h2kKO/FfWJyCzYQbIhXUxz7ETt0I/FqHjUeqj37irJ+Dl1ZtU82uYyj14u2XsZKfg==",
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@types/whatwg-url": "^11.0.2",
+        "whatwg-url": "^13.0.0"
+      }
+    },
+    "node_modules/node-fetch": {
+      "version": "2.7.0",
+      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
+      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
+      "license": "MIT",
+      "dependencies": {
+        "whatwg-url": "^5.0.0"
+      },
+      "engines": {
+        "node": "4.x || >=6.0.0"
+      },
+      "peerDependencies": {
+        "encoding": "^0.1.0"
+      },
+      "peerDependenciesMeta": {
+        "encoding": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/node-fetch/node_modules/tr46": {
+      "version": "0.0.3",
+      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
+      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
+      "license": "MIT"
+    },
+    "node_modules/node-fetch/node_modules/webidl-conversions": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
+      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
+      "license": "BSD-2-Clause"
+    },
+    "node_modules/node-fetch/node_modules/whatwg-url": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
+      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
+      "license": "MIT",
+      "dependencies": {
+        "tr46": "~0.0.3",
+        "webidl-conversions": "^3.0.0"
+      }
+    },
+    "node_modules/nth-check": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-2.1.1.tgz",
+      "integrity": "sha512-lqjrjmaOoAnWfMmBPL+XNnynZh2+swxiX3WUE0s4yEHI6m+AwrK2UZOimIRl3X/4QctVqS8AiZjFqyOGrMXb/w==",
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "boolbase": "^1.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/fb55/nth-check?sponsor=1"
+      }
+    },
+    "node_modules/parse5": {
+      "version": "7.2.1",
+      "resolved": "https://registry.npmjs.org/parse5/-/parse5-7.2.1.tgz",
+      "integrity": "sha512-BuBYQYlv1ckiPdQi/ohiivi9Sagc9JG+Ozs0r7b/0iK3sKmrb0b9FdWdBbOdx6hBCM/F9Ir82ofnBhtZOjCRPQ==",
+      "license": "MIT",
+      "dependencies": {
+        "entities": "^4.5.0"
+      },
+      "funding": {
+        "url": "https://github.com/inikulin/parse5?sponsor=1"
+      }
+    },
+    "node_modules/parse5-htmlparser2-tree-adapter": {
+      "version": "7.1.0",
+      "resolved": "https://registry.npmjs.org/parse5-htmlparser2-tree-adapter/-/parse5-htmlparser2-tree-adapter-7.1.0.tgz",
+      "integrity": "sha512-ruw5xyKs6lrpo9x9rCZqZZnIUntICjQAd0Wsmp396Ul9lN/h+ifgVV1x1gZHi8euej6wTfpqX8j+BFQxF0NS/g==",
+      "license": "MIT",
+      "dependencies": {
+        "domhandler": "^5.0.3",
+        "parse5": "^7.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/inikulin/parse5?sponsor=1"
+      }
+    },
+    "node_modules/parse5-parser-stream": {
+      "version": "7.1.2",
+      "resolved": "https://registry.npmjs.org/parse5-parser-stream/-/parse5-parser-stream-7.1.2.tgz",
+      "integrity": "sha512-JyeQc9iwFLn5TbvvqACIF/VXG6abODeB3Fwmv/TGdLk2LfbWkaySGY72at4+Ty7EkPZj854u4CrICqNk2qIbow==",
+      "license": "MIT",
+      "dependencies": {
+        "parse5": "^7.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/inikulin/parse5?sponsor=1"
+      }
+    },
+    "node_modules/punycode": {
+      "version": "2.3.1",
+      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
+      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/safer-buffer": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
+      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
+      "license": "MIT"
+    },
+    "node_modules/sparse-bitfield": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/sparse-bitfield/-/sparse-bitfield-3.0.3.tgz",
+      "integrity": "sha512-kvzhi7vqKTfkh0PZU+2D2PIllw2ymqJKujUcyPMd9Y75Nv4nPbGJZXNhxsgdQab2BmlDct1YnfQCguEvHr7VsQ==",
+      "license": "MIT",
+      "dependencies": {
+        "memory-pager": "^1.0.2"
+      }
+    },
+    "node_modules/tr46": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/tr46/-/tr46-4.1.1.tgz",
+      "integrity": "sha512-2lv/66T7e5yNyhAAC4NaKe5nVavzuGJQVVtRYLyQ2OI8tsJ61PMLlelehb0wi2Hx6+hT/OJUWZcw8MjlSRnxvw==",
+      "license": "MIT",
+      "dependencies": {
+        "punycode": "^2.3.0"
+      },
+      "engines": {
+        "node": ">=14"
+      }
+    },
+    "node_modules/undici": {
+      "version": "6.21.0",
+      "resolved": "https://registry.npmjs.org/undici/-/undici-6.21.0.tgz",
+      "integrity": "sha512-BUgJXc752Kou3oOIuU1i+yZZypyZRqNPW0vqoMPl8VaoalSfeR0D8/t4iAS3yirs79SSMTxTag+ZC86uswv+Cw==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=18.17"
+      }
+    },
+    "node_modules/webidl-conversions": {
+      "version": "7.0.0",
+      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz",
+      "integrity": "sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==",
+      "license": "BSD-2-Clause",
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/whatwg-encoding": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-3.1.1.tgz",
+      "integrity": "sha512-6qN4hJdMwfYBtE3YBTTHhoeuUrDBPZmbQaxWAqSALV/MeEnR5z1xd8UKud2RAkFoPkmB+hli1TZSnyi84xz1vQ==",
+      "license": "MIT",
+      "dependencies": {
+        "iconv-lite": "0.6.3"
+      },
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/whatwg-mimetype": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-4.0.0.tgz",
+      "integrity": "sha512-QaKxh0eNIi2mE9p2vEdzfagOKHCcj1pJ56EEHGQOVxp8r9/iszLUUV7v89x9O1p/T+NlTM5W7jW6+cz4Fq1YVg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/whatwg-url": {
+      "version": "13.0.0",
+      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-13.0.0.tgz",
+      "integrity": "sha512-9WWbymnqj57+XEuqADHrCJ2eSXzn8WXIW/YSGaZtb2WKAInQ6CHfaUUcTyyver0p8BDg5StLQq8h1vtZuwmOig==",
+      "license": "MIT",
+      "dependencies": {
+        "tr46": "^4.1.1",
+        "webidl-conversions": "^7.0.0"
+      },
+      "engines": {
+        "node": ">=16"
+      }
+    }
+  }
+}
diff --git a/package.json b/package.json
index 8fd576d..9dde4f9 100644
--- a/package.json
+++ b/package.json
@@ -13,8 +13,8 @@
   "author": "SIF",
   "license": "No se, abstenganse abogados",
   "dependencies": {
-    "cheerio": "^1.0.0-rc.12",
+    "cheerio": "^1.0.0",
     "mongodb": "^6.3.0",
-    "node-fetch": "^2.6.1"
+    "node-fetch": "^2.7.0"
   }
-} 
\ No newline at end of file
+}

commit 326d8580396fe1acc5afc8e68a50e93c97c29831
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Sat Jan 11 16:39:04 2025 +0100

    ajustada estructura + scrapper para deplatec

diff --git a/acciones/bajo_demanda/agregar_producto.js b/acciones/bajo_demanda/agregar_producto.js
deleted file mode 100644
index 8596455..0000000
--- a/acciones/bajo_demanda/agregar_producto.js
+++ /dev/null
@@ -1,21 +0,0 @@
-const Producto = require('../../modelos/producto');
-const { agregarProducto } = require('../../utilidades/base_de_datos');
-
-async function main(params) {
-  const { url, nombre, precioDeseado, selectores } = params;
-
-  if (!url || !nombre || !precioDeseado || !selectores) {
-    return { error: 'Se requieren todos los campos: url, nombre, precioDeseado, selectores' };
-  }
-
-  try {
-    const producto = new Producto(url, nombre, precioDeseado, selectores);
-    await agregarProducto(producto);
-    return { body: 'Producto agregado correctamente' };
-  } catch (error) {
-    console.error('Error al agregar el producto:', error);
-    return { error: 'Error al agregar el producto' };
-  }
-}
-
-exports.main = main; 
\ No newline at end of file
diff --git a/acciones/bajo_demanda/obtener_info_producto.js b/acciones/bajo_demanda/obtener_info_producto.js
deleted file mode 100644
index 24a26bb..0000000
--- a/acciones/bajo_demanda/obtener_info_producto.js
+++ /dev/null
@@ -1,19 +0,0 @@
-const { extraerInfoProducto } = require('../../utilidades/scraper');
-
-async function main(params) {
-  const { url, selectores } = params;
-
-  if (!url) {
-    return { error: 'Se requiere la URL del producto' };
-  }
-
-  try {
-    const infoProducto = await extraerInfoProducto(url, selectores);
-    return { body: infoProducto };
-  } catch (error) {
-    console.error('Error al obtener la información del producto:', error);
-    return { error: 'Error al obtener la información del producto' };
-  }
-}
-
-exports.main = main; 
\ No newline at end of file
diff --git a/acciones/hola_mundo.js b/acciones/hola_mundo.js
deleted file mode 100644
index 1effcb7..0000000
--- a/acciones/hola_mundo.js
+++ /dev/null
@@ -1,5 +0,0 @@
-function main(params) {
-  return { body: 'Hola mundo!' };
-}
-
-exports.main = main; 
\ No newline at end of file
diff --git a/acciones/internas/actualizar_precio.js b/acciones/internas/actualizar_precio.js
deleted file mode 100644
index 12aadbf..0000000
--- a/acciones/internas/actualizar_precio.js
+++ /dev/null
@@ -1,47 +0,0 @@
-const { MongoClient } = require('mongodb');
-const { conectar } = require('../../utilidades/base_de_datos');
-
-async function main(params) {
-  const { url, precio } = params;
-
-  if (!url || precio === undefined) {
-    return { error: 'Se requieren la URL del producto y el nuevo precio' };
-  }
-
-  try {
-    await conectar();
-    const db = client.db('chollometro2');
-    const coleccionProductos = db.collection('productos');
-
-    const resultado = await coleccionProductos.updateOne(
-      { url: url },
-      {
-        $set: {
-          precioActual: precio,
-          fechaUltimaActualizacion: new Date(),
-        },
-        $push: {
-          historialPrecios: {
-            fecha: new Date(),
-            precio: precio,
-          },
-        },
-      }
-    );
-
-    if (resultado.matchedCount === 0) {
-      return { error: 'No se encontró ningún producto con esa URL' };
-    }
-
-    if (resultado.modifiedCount === 0) {
-      return { body: 'El precio ya estaba actualizado' };
-    }
-
-    return { body: 'Precio actualizado correctamente' };
-  } catch (error) {
-    console.error('Error al actualizar el precio:', error);
-    return { error: 'Error al actualizar el precio' };
-  }
-}
-
-exports.main = main; 
\ No newline at end of file
diff --git a/acciones/notificaciones/enviar_alerta.js b/acciones/notificaciones/enviar_alerta.js
deleted file mode 100644
index 7652948..0000000
--- a/acciones/notificaciones/enviar_alerta.js
+++ /dev/null
@@ -1,50 +0,0 @@
-const http = require('http');
-const { URL } = require('url');
-
-async function main(params) {
-  const { url, precio, nombre } = params;
-
-  if (!url || precio === undefined || !nombre) {
-    return { error: 'Se requieren la URL, el precio y el nombre del producto' };
-  }
-
-  try {
-    const mensaje = `
-      <!DOCTYPE html>
-      <html>
-      <head>
-        <title>Oferta encontrada</title>
-      </head>
-      <body>
-        <h1>¡Oferta encontrada!</h1>
-        <p>El precio de <strong>${nombre}</strong> ha bajado a <strong>${precio}</strong>.</p>
-        <p>URL: <a href="${url}">${url}</a></p>
-      </body>
-      </html>
-    `;
-
-    // Crear un servidor simple que se cierra después de enviar una respuesta
-    const server = http.createServer((req, res) => {
-      res.writeHead(200, { 'Content-Type': 'text/html' });
-      res.end(mensaje);
-      server.close();
-    });
-
-    // Iniciar el servidor en un puerto aleatorio
-    server.listen(0, () => {
-      const port = server.address().port;
-      const serverUrl = `http://localhost:${port}`;
-      console.log(`Servidor de notificaciones escuchando en ${serverUrl}`);
-
-      // Abrir el navegador (opcional, dependiendo del entorno)
-      // require('open')(serverUrl);
-    });
-
-    return { body: 'Alerta enviada correctamente' };
-  } catch (error) {
-    console.error('Error al enviar la alerta:', error);
-    return { error: 'Error al enviar la alerta' };
-  }
-}
-
-exports.main = main; 
\ No newline at end of file
diff --git a/acciones/programadas/verificar_precios.js b/acciones/programadas/verificar_precios.js
deleted file mode 100644
index f39eefd..0000000
--- a/acciones/programadas/verificar_precios.js
+++ /dev/null
@@ -1,35 +0,0 @@
-const Producto = require('../../modelos/producto');
-const { getPrecios } = require('../../utilidades/base_de_datos');
-const { extraerInfoProducto } = require('../../utilidades/scraper');
-const { main: actualizarPrecio } = require('../internas/actualizar_precio');
-const { main: enviarAlerta } = require('../notificaciones/enviar_alerta');
-
-async function main(params) {
-  try {
-    const productos = await getPrecios();
-    const productoPendiente = productos.map(async (producto) => {
-      const infoProducto = await extraerInfoProducto(producto.url, producto.elementoWeb);
-      console.log(infoProducto);
-
-      if (infoProducto.precio !== producto.precioActual) {
-        await actualizarPrecio({ url: producto.url, precio: infoProducto.precio });
-        if (infoProducto.precio <= producto.precioDeseado) {
-          await enviarAlerta({ url: producto.url, precio: infoProducto.precio, nombre: infoProducto.nombre });
-        }
-      }
-    });
-
-    await Promise.all(productoPendiente);
-
-    return {
-      body: 'Precios verificados correctamente',
-    };
-  } catch (error) {
-    console.error('Error al verificar precios:', error);
-    return {
-      error: 'Error al verificar precios',
-    };
-  }
-}
-
-exports.main = main; 
\ No newline at end of file
diff --git a/config.yaml b/config.yaml
deleted file mode 100644
index 8be7e5d..0000000
--- a/config.yaml
+++ /dev/null
@@ -1,5 +0,0 @@
-base_de_datos:
-  uri: "mongodb://localhost:27017"
-  nombre: "chollometro2"
-
-notificaciones: {}
\ No newline at end of file
diff --git a/lib/enviarNotificacion.js b/lib/enviarNotificacion.js
new file mode 100644
index 0000000..1b20fb6
--- /dev/null
+++ b/lib/enviarNotificacion.js
@@ -0,0 +1,28 @@
+async function enviarNotificacionDiscord(mensaje) {
+    const webhookUrl = 'webhookPlaceholderPreOW';
+
+    try {
+        const response = await fetch(webhookUrl, {
+            method: 'POST',
+            headers: {
+                'Content-Type': 'application/json',
+            },
+            body: JSON.stringify({
+                content: mensaje
+            })
+        });
+
+        if (!response.ok) {
+            throw new Error(`Error HTTP: ${response.status}`);
+        }
+        
+        return true;
+    } catch (error) {
+        console.error('Error al enviar notificación a openwhisk:', error);
+        return false;
+    }
+}
+
+module.exports = {
+    enviarNotificacionDiscord
+};
diff --git a/lib/scraper.js b/lib/scraper.js
new file mode 100644
index 0000000..648b55a
--- /dev/null
+++ b/lib/scraper.js
@@ -0,0 +1,31 @@
+const cheerio = require('cheerio');
+const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));
+
+async function scraper(url, elementoWeb) {
+  async function obtenerDatosProducto(urlProducto, selectores) {
+    const $ = cheerio.load(await (await fetch(urlProducto)).text());
+    const nombre = $(selectores.nombre).text().trim();
+    const precioTexto = $(selectores.precio).text().trim();
+    console.log(precioTexto);
+    const precio = parseFloat(precioTexto.replace(/[^0-9,.]/g, '').replace(',', '.'));
+    return { nombre, precio };
+  }
+
+  if (Array.isArray(url)) {
+    const promesas = url.map(async ({ id, url, elementoWeb }) => {
+      try {
+        const datos = await obtenerDatosProducto(url, elementoWeb);
+        return { id, url, ...datos };
+      } catch (error) {
+        return { id, url, error: error.message };
+      }
+    });
+    return Promise.all(promesas);
+  }
+
+  return obtenerDatosProducto(url, elementoWeb);
+}
+
+module.exports = {
+  scraper,
+};
\ No newline at end of file
diff --git a/lib/scrapperDeplatec.js b/lib/scrapperDeplatec.js
new file mode 100644
index 0000000..0fdf200
--- /dev/null
+++ b/lib/scrapperDeplatec.js
@@ -0,0 +1,8 @@
+const { scraper } = require('./scraper');
+
+scraper('https://deplatec.com/torres-gaming/63909-pctec-gaming-ga5-ryzen-5-5500-32gb-1tb-rtx-4060-ti.html', {
+    nombre: 'h1.page-title',
+    precio: '.product-price.current-price-value'
+})
+.then(resultado => console.log(resultado))
+.catch(error => console.error(error));
\ No newline at end of file
diff --git a/modelos/producto.js b/modelos/producto.js
deleted file mode 100644
index 2667079..0000000
--- a/modelos/producto.js
+++ /dev/null
@@ -1,23 +0,0 @@
-class Producto {
-  constructor(url, nombre, precioDeseado, elementoWeb, precioActual, precioMinimoHistorico, historialPrecios, fechaCreacion, fechaUltimaActualizacion = null, disponibilidad = null, porcentajeDescuento = null, vendedor = null, categoria = null, valoraciones = {puntuacion: null, numeroReviews: null}) {
-    this.url = url;
-    this.nombre = nombre;
-    this.precioActual = precioActual;
-    this.precioMinimoHistorico = precioMinimoHistorico;
-    this.precioDeseado = precioDeseado;
-    this.historialPrecios = historialPrecios || [];
-    this.fechaCreacion = fechaCreacion || new Date();
-    this.fechaUltimaActualizacion = fechaUltimaActualizacion;
-    this.elementoWeb = {
-      nombre: elementoWeb.nombre,
-      precio: elementoWeb.precio
-    };
-    this.disponibilidad = disponibilidad;
-    this.porcentajeDescuento = porcentajeDescuento;
-    this.vendedor = vendedor;
-    this.categoria = categoria;
-    this.valoraciones = valoraciones;
-  }
-}
-
-module.exports = Producto;
\ No newline at end of file
diff --git a/utilidades/base_de_datos.js b/utilidades/base_de_datos.js
deleted file mode 100644
index 140313d..0000000
--- a/utilidades/base_de_datos.js
+++ /dev/null
@@ -1,45 +0,0 @@
-const { MongoClient } = require('mongodb');
-const Producto = require('../modelos/producto');
-
-const uri = process.env.MONGO_URL || 'mongodb://localhost:27017';
-const client = new MongoClient(uri);
-const dbName = 'chollometro2';
-
-async function conectar() {
-  try {
-    await client.connect();
-    console.log('Conectado a la base de datos');
-  } catch (error) {
-    console.error('Error al conectar a la base de datos:', error);
-    throw error;
-  }
-}
-
-async function getPrecios() {
-  try {
-    const db = client.db(dbName);
-    const coleccionProductos = db.collection('productos');
-    const productos = await coleccionProductos.find({}).toArray();
-    return productos;
-  } catch (error) {
-    console.error('Error al obtener los productos:', error);
-    throw error;
-  }
-}
-
-async function agregarProducto(producto) {
-  try {
-    const db = client.db(dbName);
-    const coleccionProductos = db.collection('productos');
-    await coleccionProductos.insertOne(producto);
-  } catch (error) {
-    console.error('Error al agregar el producto:', error);
-    throw error;
-  }
-}
-
-module.exports = {
-  conectar,
-  getPrecios,
-  agregarProducto,
-}; 
\ No newline at end of file
diff --git a/utilidades/notificador.js b/utilidades/notificador.js
deleted file mode 100644
index 1dd052e..0000000
--- a/utilidades/notificador.js
+++ /dev/null
@@ -1,29 +0,0 @@
-const fetch = require('node-fetch');
-const { config } = require('yargs');
-
-async function enviarNotificacion(mensaje, webhookUrl) {
-  try {
-    const response = await fetch(webhookUrl, {
-      method: 'POST',
-      headers: {
-        'Content-Type': 'application/json',
-      },
-      body: JSON.stringify({
-        text: mensaje,
-      }),
-    });
-
-    if (!response.ok) {
-      throw new Error(`Error al enviar la notificación ${response.statusText}`);
-    }
-
-    console.log('Notificación enviada correctamente');
-  } catch (error) {
-    console.error('Error al enviar la notificación', error);
-    throw error;
-  }
-}
-
-module.exports = {
-  enviarNotificacion,
-}; 
\ No newline at end of file
diff --git a/utilidades/scraper.js b/utilidades/scraper.js
deleted file mode 100644
index 6069aed..0000000
--- a/utilidades/scraper.js
+++ /dev/null
@@ -1,23 +0,0 @@
-const cheerio = require('cheerio');
-const fetch = require('node-fetch');
-
-async function extraerInfoProducto(url, elementoWeb) {
-  try {
-    const response = await fetch(url);
-    const body = await response.text();
-    const $ = cheerio.load(body);
-
-    const nombre = $(elementoWeb.nombre).text().trim();
-    const precioTexto = $(elementoWeb.precio).text().trim();
-    const precio = parseFloat(precioTexto.replace(/[^0-9,.]/g, '').replace(',', '.'));
-
-    return { nombre, precio };
-  } catch (error) {
-    console.error('Error al extraer la información del producto:', error);
-    throw error;
-  }
-}
-
-module.exports = {
-  extraerInfoProducto,
-}; 
\ No newline at end of file
diff --git a/utilidades/testeos.js b/utilidades/testeos.js
deleted file mode 100644
index b2bb417..0000000
--- a/utilidades/testeos.js
+++ /dev/null
@@ -1,17 +0,0 @@
-const { main } = require('./acciones/notificaciones/enviar_alerta.js');
-
-// Datos de prueba
-const params = {
-  url: 'https://www.ejemplo.com/producto',
-  precio: '99.99€',
-  nombre: 'PlayStation 5'
-};
-
-// Ejecutar la función
-main(params)
-  .then(result => {
-    console.log('Resultado:', result);
-  })
-  .catch(error => {
-    console.error('Error:', error);
-  });
\ No newline at end of file

commit 3af4947b60c6291f911801622230efc0310b8ef1
Author: Jefferson Paul Caiza Jami <jpcaijam@upv.edu.es>
Date:   Sat Jan 11 16:35:50 2025 +0100

    Update .gitignore

diff --git a/.gitignore b/.gitignore
index 0c1527c..1170717 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1 +1,136 @@
-openwhisk-standalone.jar
\ No newline at end of file
+# Logs
+logs
+*.log
+npm-debug.log*
+yarn-debug.log*
+yarn-error.log*
+lerna-debug.log*
+.pnpm-debug.log*
+
+# Diagnostic reports (https://nodejs.org/api/report.html)
+report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
+
+# Runtime data
+pids
+*.pid
+*.seed
+*.pid.lock
+
+# Directory for instrumented libs generated by jscoverage/JSCover
+lib-cov
+
+# Coverage directory used by tools like istanbul
+coverage
+*.lcov
+
+# nyc test coverage
+.nyc_output
+
+# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
+.grunt
+
+# Bower dependency directory (https://bower.io/)
+bower_components
+
+# node-waf configuration
+.lock-wscript
+
+# Compiled binary addons (https://nodejs.org/api/addons.html)
+build/Release
+
+# Dependency directories
+node_modules/
+jspm_packages/
+
+# Snowpack dependency directory (https://snowpack.dev/)
+web_modules/
+
+# TypeScript cache
+*.tsbuildinfo
+
+# Optional npm cache directory
+.npm
+
+# Optional eslint cache
+.eslintcache
+
+# Optional stylelint cache
+.stylelintcache
+
+# Microbundle cache
+.rpt2_cache/
+.rts2_cache_cjs/
+.rts2_cache_es/
+.rts2_cache_umd/
+
+# Optional REPL history
+.node_repl_history
+
+# Output of 'npm pack'
+*.tgz
+
+# Yarn Integrity file
+.yarn-integrity
+
+# dotenv environment variable files
+.env
+.env.development.local
+.env.test.local
+.env.production.local
+.env.local
+
+# parcel-bundler cache (https://parceljs.org/)
+.cache
+.parcel-cache
+
+# Next.js build output
+.next
+out
+
+# Nuxt.js build / generate output
+.nuxt
+dist
+
+# Gatsby files
+.cache/
+# Comment in the public line in if your project uses Gatsby and not Next.js
+# https://nextjs.org/blog/next-9-1#public-directory-support
+# public
+
+# vuepress build output
+.vuepress/dist
+
+# vuepress v2.x temp and cache directory
+.temp
+.cache
+
+# vitepress build output
+**/.vitepress/dist
+
+# vitepress cache directory
+**/.vitepress/cache
+
+# Docusaurus cache and generated files
+.docusaurus
+
+# Serverless directories
+.serverless/
+
+# FuseBox cache
+.fusebox/
+
+# DynamoDB Local files
+.dynamodb/
+
+# TernJS port file
+.tern-port
+
+# Stores VSCode versions used for testing VSCode extensions
+.vscode-test
+
+# yarn v2
+.yarn/cache
+.yarn/unplugged
+.yarn/build-state.yml
+.yarn/install-state.gz
+.pnp.*

commit 40af326c4a77fa677e93b89bed8b308c45611aa6
Author: Pablo Granell <31219572+pablogranell@users.noreply.github.com>
Date:   Tue Jan 7 20:57:21 2025 +0100

    Update README.md

diff --git a/README.md b/README.md
index 05b8544..e24c5b9 100644
--- a/README.md
+++ b/README.md
@@ -1,3 +1,9 @@
+Para probar:
+
+wsk project deploy
+
+wsk action invoke /guest/chollometro2/testeos -r
+
 Ya no es necesaria la compilacion, usa: https://mega.co.nz/#!0g0XkJiQ!Lk7XCyGwi_R1E_NhoXnL_k3ZrHhO1h0tOW18Wa9G44I
 
 Para ejectuar(CMD):

commit 661e706e3536cd3abb89b382221e92fc0ab8471e
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Tue Jan 7 17:26:51 2025 +0100

    Añadido fichero de pruebas

diff --git a/manifest.yaml b/manifest.yaml
index 2ffd83d..1bcbdbc 100644
--- a/manifest.yaml
+++ b/manifest.yaml
@@ -3,6 +3,11 @@ packages:
     version: 1.0.0
     license: No se, abstenganse abogados
     actions:
+      testeos:
+        function: utilidades/testeos.js
+        runtime: nodejs:18
+        annotations:
+          web-export: true
       verificar-precios:
         function: acciones/programadas/verificar_precios.js
         runtime: nodejs:18
diff --git a/utilidades/testeos.js b/utilidades/testeos.js
new file mode 100644
index 0000000..b2bb417
--- /dev/null
+++ b/utilidades/testeos.js
@@ -0,0 +1,17 @@
+const { main } = require('./acciones/notificaciones/enviar_alerta.js');
+
+// Datos de prueba
+const params = {
+  url: 'https://www.ejemplo.com/producto',
+  precio: '99.99€',
+  nombre: 'PlayStation 5'
+};
+
+// Ejecutar la función
+main(params)
+  .then(result => {
+    console.log('Resultado:', result);
+  })
+  .catch(error => {
+    console.error('Error:', error);
+  });
\ No newline at end of file

commit 42db9feabd8fd50e97bd7183e2217be0d87a6c80
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Tue Jan 7 14:42:06 2025 +0100

    Aclarado readme

diff --git a/README.md b/README.md
index d8c2b56..05b8544 100644
--- a/README.md
+++ b/README.md
@@ -4,7 +4,9 @@ Para ejectuar(CMD):
 1. abrir docker desktop
 2. java -jar .\openwhisk-standalone.jar
 3. wsk.exe project deploy
-4. wsk.exe action invoke chollometro2/hola-mundo
+4. (Para probar) http://localhost:3233/api/v1/web/guest/chollometro2/hola-mundo
+o
+5. wsk action invoke chollometro2/hola-mundo -r
 
 Pido perdon por cambiar la rama por defecto a main, habia intentado poner LFS pero no me funcionaba.
 

commit f865d6c0aa0f01a6c200477db738a80fbd23a865
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Tue Jan 7 14:38:51 2025 +0100

    Arreglada ejecuccion

diff --git a/README.md b/README.md
index 33ab9f5..d8c2b56 100644
--- a/README.md
+++ b/README.md
@@ -1,5 +1,11 @@
 Ya no es necesaria la compilacion, usa: https://mega.co.nz/#!0g0XkJiQ!Lk7XCyGwi_R1E_NhoXnL_k3ZrHhO1h0tOW18Wa9G44I
 
+Para ejectuar(CMD):
+1. abrir docker desktop
+2. java -jar .\openwhisk-standalone.jar
+3. wsk.exe project deploy
+4. wsk.exe action invoke chollometro2/hola-mundo
+
 Pido perdon por cambiar la rama por defecto a main, habia intentado poner LFS pero no me funcionaba.
 
 Compilacion:
diff --git a/acciones/hola_mundo.js b/acciones/hola_mundo.js
new file mode 100644
index 0000000..1effcb7
--- /dev/null
+++ b/acciones/hola_mundo.js
@@ -0,0 +1,5 @@
+function main(params) {
+  return { body: 'Hola mundo!' };
+}
+
+exports.main = main; 
\ No newline at end of file
diff --git a/acciones/internas/actualizar_precio.js b/acciones/internas/actualizar_precio.js
new file mode 100644
index 0000000..12aadbf
--- /dev/null
+++ b/acciones/internas/actualizar_precio.js
@@ -0,0 +1,47 @@
+const { MongoClient } = require('mongodb');
+const { conectar } = require('../../utilidades/base_de_datos');
+
+async function main(params) {
+  const { url, precio } = params;
+
+  if (!url || precio === undefined) {
+    return { error: 'Se requieren la URL del producto y el nuevo precio' };
+  }
+
+  try {
+    await conectar();
+    const db = client.db('chollometro2');
+    const coleccionProductos = db.collection('productos');
+
+    const resultado = await coleccionProductos.updateOne(
+      { url: url },
+      {
+        $set: {
+          precioActual: precio,
+          fechaUltimaActualizacion: new Date(),
+        },
+        $push: {
+          historialPrecios: {
+            fecha: new Date(),
+            precio: precio,
+          },
+        },
+      }
+    );
+
+    if (resultado.matchedCount === 0) {
+      return { error: 'No se encontró ningún producto con esa URL' };
+    }
+
+    if (resultado.modifiedCount === 0) {
+      return { body: 'El precio ya estaba actualizado' };
+    }
+
+    return { body: 'Precio actualizado correctamente' };
+  } catch (error) {
+    console.error('Error al actualizar el precio:', error);
+    return { error: 'Error al actualizar el precio' };
+  }
+}
+
+exports.main = main; 
\ No newline at end of file
diff --git a/acciones/notificaciones/enviar_alerta.js b/acciones/notificaciones/enviar_alerta.js
new file mode 100644
index 0000000..7652948
--- /dev/null
+++ b/acciones/notificaciones/enviar_alerta.js
@@ -0,0 +1,50 @@
+const http = require('http');
+const { URL } = require('url');
+
+async function main(params) {
+  const { url, precio, nombre } = params;
+
+  if (!url || precio === undefined || !nombre) {
+    return { error: 'Se requieren la URL, el precio y el nombre del producto' };
+  }
+
+  try {
+    const mensaje = `
+      <!DOCTYPE html>
+      <html>
+      <head>
+        <title>Oferta encontrada</title>
+      </head>
+      <body>
+        <h1>¡Oferta encontrada!</h1>
+        <p>El precio de <strong>${nombre}</strong> ha bajado a <strong>${precio}</strong>.</p>
+        <p>URL: <a href="${url}">${url}</a></p>
+      </body>
+      </html>
+    `;
+
+    // Crear un servidor simple que se cierra después de enviar una respuesta
+    const server = http.createServer((req, res) => {
+      res.writeHead(200, { 'Content-Type': 'text/html' });
+      res.end(mensaje);
+      server.close();
+    });
+
+    // Iniciar el servidor en un puerto aleatorio
+    server.listen(0, () => {
+      const port = server.address().port;
+      const serverUrl = `http://localhost:${port}`;
+      console.log(`Servidor de notificaciones escuchando en ${serverUrl}`);
+
+      // Abrir el navegador (opcional, dependiendo del entorno)
+      // require('open')(serverUrl);
+    });
+
+    return { body: 'Alerta enviada correctamente' };
+  } catch (error) {
+    console.error('Error al enviar la alerta:', error);
+    return { error: 'Error al enviar la alerta' };
+  }
+}
+
+exports.main = main; 
\ No newline at end of file
diff --git a/acciones/programadas/verificar_precios.js b/acciones/programadas/verificar_precios.js
index 30abf21..f39eefd 100644
--- a/acciones/programadas/verificar_precios.js
+++ b/acciones/programadas/verificar_precios.js
@@ -1,13 +1,22 @@
 const Producto = require('../../modelos/producto');
 const { getPrecios } = require('../../utilidades/base_de_datos');
 const { extraerInfoProducto } = require('../../utilidades/scraper');
+const { main: actualizarPrecio } = require('../internas/actualizar_precio');
+const { main: enviarAlerta } = require('../notificaciones/enviar_alerta');
 
 async function main(params) {
   try {
     const productos = await getPrecios();
     const productoPendiente = productos.map(async (producto) => {
-      const infoProducto = await extraerInfoProducto(producto.url, producto.selectores);
+      const infoProducto = await extraerInfoProducto(producto.url, producto.elementoWeb);
       console.log(infoProducto);
+
+      if (infoProducto.precio !== producto.precioActual) {
+        await actualizarPrecio({ url: producto.url, precio: infoProducto.precio });
+        if (infoProducto.precio <= producto.precioDeseado) {
+          await enviarAlerta({ url: producto.url, precio: infoProducto.precio, nombre: infoProducto.nombre });
+        }
+      }
     });
 
     await Promise.all(productoPendiente);
diff --git a/manifest.yaml b/manifest.yaml
index fefa65f..2ffd83d 100644
--- a/manifest.yaml
+++ b/manifest.yaml
@@ -6,8 +6,6 @@ packages:
       verificar-precios:
         function: acciones/programadas/verificar_precios.js
         runtime: nodejs:18
-        inputs:
-          frecuencia: "*/5 * * * *" #cada 5 minutos
         annotations:
           web-export: true
       obtener-info-producto:
@@ -26,19 +24,13 @@ packages:
       enviar-alerta:
         function: acciones/notificaciones/enviar_alerta.js
         runtime: nodejs:18
-    sequences:
-      verificar-y-notificar:
-        actions: obtener-info-producto,enviar-alerta
+      hola-mundo:
+        function: acciones/hola_mundo.js
+        runtime: nodejs:18
         annotations:
           web-export: true
-    triggers:
-      nuevo-producto:
+    sequences:
+      verificar-y-notificar:
+        actions: obtener-info-producto,actualizar-precio,enviar-alerta
         annotations:
-          feed: /whisk.system/alarms/interval
-          parameters:
-            - name: cron
-              value: "*/5 * * * *"
-    rules:
-      activar-verificar-y-notificar:
-        trigger: nuevo-producto
-        action: verificar-y-notificar 
\ No newline at end of file
+          web-export: true
\ No newline at end of file
diff --git a/utilidades/notificador.js b/utilidades/notificador.js
new file mode 100644
index 0000000..1dd052e
--- /dev/null
+++ b/utilidades/notificador.js
@@ -0,0 +1,29 @@
+const fetch = require('node-fetch');
+const { config } = require('yargs');
+
+async function enviarNotificacion(mensaje, webhookUrl) {
+  try {
+    const response = await fetch(webhookUrl, {
+      method: 'POST',
+      headers: {
+        'Content-Type': 'application/json',
+      },
+      body: JSON.stringify({
+        text: mensaje,
+      }),
+    });
+
+    if (!response.ok) {
+      throw new Error(`Error al enviar la notificación ${response.statusText}`);
+    }
+
+    console.log('Notificación enviada correctamente');
+  } catch (error) {
+    console.error('Error al enviar la notificación', error);
+    throw error;
+  }
+}
+
+module.exports = {
+  enviarNotificacion,
+}; 
\ No newline at end of file

commit 6e6b0f477979fac1bd2b394bcc2f13a9a538ab31
Author: Pablo Granell <31219572+pablogranell@users.noreply.github.com>
Date:   Tue Jan 7 00:39:19 2025 +0100

    Update README.md

diff --git a/README.md b/README.md
index 086e39f..33ab9f5 100644
--- a/README.md
+++ b/README.md
@@ -1,4 +1,4 @@
-Ya no es necesaria la compilacion, usa: https://send.now/ga7v9texqwl8
+Ya no es necesaria la compilacion, usa: https://mega.co.nz/#!0g0XkJiQ!Lk7XCyGwi_R1E_NhoXnL_k3ZrHhO1h0tOW18Wa9G44I
 
 Pido perdon por cambiar la rama por defecto a main, habia intentado poner LFS pero no me funcionaba.
 

commit a0b4ec7f9096902d5f397c22704f3c6652cf5875
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Tue Jan 7 00:02:34 2025 +0100

    typo

diff --git a/README.md b/README.md
index 5921bbe..086e39f 100644
--- a/README.md
+++ b/README.md
@@ -3,8 +3,7 @@ Ya no es necesaria la compilacion, usa: https://send.now/ga7v9texqwl8
 Pido perdon por cambiar la rama por defecto a main, habia intentado poner LFS pero no me funcionaba.
 
 Compilacion:
+
 Necesita java, su SDK, docker y node para compilar
 
 Dejo WSK.exe que es la CLI
-
-Hace falta compilar para usar

commit a28f1358ea476206177da98caefedb2a93127a91
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Mon Jan 6 23:27:40 2025 +0100

    Gitignore

diff --git a/.gitattributes b/.gitattributes
deleted file mode 100644
index 3b2744e..0000000
--- a/.gitattributes
+++ /dev/null
@@ -1 +0,0 @@
-openwhisk-standalone.jar filter=lfs diff=lfs merge=lfs -text
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..0c1527c
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1 @@
+openwhisk-standalone.jar
\ No newline at end of file

commit bfdcd204f22d75bab8e6651ee045e7964d75b7c1
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Mon Jan 6 23:02:18 2025 +0100

    ajuste del readme

diff --git a/README.md b/README.md
index 5367e6b..5921bbe 100644
--- a/README.md
+++ b/README.md
@@ -1,5 +1,6 @@
 Ya no es necesaria la compilacion, usa: https://send.now/ga7v9texqwl8
 
+Pido perdon por cambiar la rama por defecto a main, habia intentado poner LFS pero no me funcionaba.
 
 Compilacion:
 Necesita java, su SDK, docker y node para compilar

commit 6ed471536c157f2fcda68916937053a9d978d946
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Mon Jan 6 22:59:06 2025 +0100

    Typo

diff --git a/README.md b/README.md
index 4f62355..5367e6b 100644
--- a/README.md
+++ b/README.md
@@ -3,5 +3,7 @@ Ya no es necesaria la compilacion, usa: https://send.now/ga7v9texqwl8
 
 Compilacion:
 Necesita java, su SDK, docker y node para compilar
+
 Dejo WSK.exe que es la CLI
+
 Hace falta compilar para usar

commit f1043ea007219c770c47d4250c8b5430260f2fab
Author: Pablo Granell <pablogranellrobles@outlook.com>
Date:   Mon Jan 6 22:56:57 2025 +0100

    Ajustado repositorio

diff --git a/.gitattributes b/.gitattributes
new file mode 100644
index 0000000..3b2744e
--- /dev/null
+++ b/.gitattributes
@@ -0,0 +1 @@
+openwhisk-standalone.jar filter=lfs diff=lfs merge=lfs -text
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..4f62355
--- /dev/null
+++ b/README.md
@@ -0,0 +1,7 @@
+Ya no es necesaria la compilacion, usa: https://send.now/ga7v9texqwl8
+
+
+Compilacion:
+Necesita java, su SDK, docker y node para compilar
+Dejo WSK.exe que es la CLI
+Hace falta compilar para usar
diff --git a/acciones/bajo_demanda/agregar_producto.js b/acciones/bajo_demanda/agregar_producto.js
new file mode 100644
index 0000000..8596455
--- /dev/null
+++ b/acciones/bajo_demanda/agregar_producto.js
@@ -0,0 +1,21 @@
+const Producto = require('../../modelos/producto');
+const { agregarProducto } = require('../../utilidades/base_de_datos');
+
+async function main(params) {
+  const { url, nombre, precioDeseado, selectores } = params;
+
+  if (!url || !nombre || !precioDeseado || !selectores) {
+    return { error: 'Se requieren todos los campos: url, nombre, precioDeseado, selectores' };
+  }
+
+  try {
+    const producto = new Producto(url, nombre, precioDeseado, selectores);
+    await agregarProducto(producto);
+    return { body: 'Producto agregado correctamente' };
+  } catch (error) {
+    console.error('Error al agregar el producto:', error);
+    return { error: 'Error al agregar el producto' };
+  }
+}
+
+exports.main = main; 
\ No newline at end of file
diff --git a/acciones/bajo_demanda/obtener_info_producto.js b/acciones/bajo_demanda/obtener_info_producto.js
new file mode 100644
index 0000000..24a26bb
--- /dev/null
+++ b/acciones/bajo_demanda/obtener_info_producto.js
@@ -0,0 +1,19 @@
+const { extraerInfoProducto } = require('../../utilidades/scraper');
+
+async function main(params) {
+  const { url, selectores } = params;
+
+  if (!url) {
+    return { error: 'Se requiere la URL del producto' };
+  }
+
+  try {
+    const infoProducto = await extraerInfoProducto(url, selectores);
+    return { body: infoProducto };
+  } catch (error) {
+    console.error('Error al obtener la información del producto:', error);
+    return { error: 'Error al obtener la información del producto' };
+  }
+}
+
+exports.main = main; 
\ No newline at end of file
diff --git a/acciones/programadas/verificar_precios.js b/acciones/programadas/verificar_precios.js
new file mode 100644
index 0000000..30abf21
--- /dev/null
+++ b/acciones/programadas/verificar_precios.js
@@ -0,0 +1,26 @@
+const Producto = require('../../modelos/producto');
+const { getPrecios } = require('../../utilidades/base_de_datos');
+const { extraerInfoProducto } = require('../../utilidades/scraper');
+
+async function main(params) {
+  try {
+    const productos = await getPrecios();
+    const productoPendiente = productos.map(async (producto) => {
+      const infoProducto = await extraerInfoProducto(producto.url, producto.selectores);
+      console.log(infoProducto);
+    });
+
+    await Promise.all(productoPendiente);
+
+    return {
+      body: 'Precios verificados correctamente',
+    };
+  } catch (error) {
+    console.error('Error al verificar precios:', error);
+    return {
+      error: 'Error al verificar precios',
+    };
+  }
+}
+
+exports.main = main; 
\ No newline at end of file
diff --git a/config.yaml b/config.yaml
new file mode 100644
index 0000000..8be7e5d
--- /dev/null
+++ b/config.yaml
@@ -0,0 +1,5 @@
+base_de_datos:
+  uri: "mongodb://localhost:27017"
+  nombre: "chollometro2"
+
+notificaciones: {}
\ No newline at end of file
diff --git a/manifest.yaml b/manifest.yaml
new file mode 100644
index 0000000..fefa65f
--- /dev/null
+++ b/manifest.yaml
@@ -0,0 +1,44 @@
+packages:
+  chollometro2:
+    version: 1.0.0
+    license: No se, abstenganse abogados
+    actions:
+      verificar-precios:
+        function: acciones/programadas/verificar_precios.js
+        runtime: nodejs:18
+        inputs:
+          frecuencia: "*/5 * * * *" #cada 5 minutos
+        annotations:
+          web-export: true
+      obtener-info-producto:
+        function: acciones/bajo_demanda/obtener_info_producto.js
+        runtime: nodejs:18
+        annotations:
+          web-export: true
+      agregar-producto:
+        function: acciones/bajo_demanda/agregar_producto.js
+        runtime: nodejs:18
+        annotations:
+          web-export: true
+      actualizar-precio:
+        function: acciones/internas/actualizar_precio.js
+        runtime: nodejs:18
+      enviar-alerta:
+        function: acciones/notificaciones/enviar_alerta.js
+        runtime: nodejs:18
+    sequences:
+      verificar-y-notificar:
+        actions: obtener-info-producto,enviar-alerta
+        annotations:
+          web-export: true
+    triggers:
+      nuevo-producto:
+        annotations:
+          feed: /whisk.system/alarms/interval
+          parameters:
+            - name: cron
+              value: "*/5 * * * *"
+    rules:
+      activar-verificar-y-notificar:
+        trigger: nuevo-producto
+        action: verificar-y-notificar 
\ No newline at end of file
diff --git a/modelos/producto.js b/modelos/producto.js
new file mode 100644
index 0000000..2667079
--- /dev/null
+++ b/modelos/producto.js
@@ -0,0 +1,23 @@
+class Producto {
+  constructor(url, nombre, precioDeseado, elementoWeb, precioActual, precioMinimoHistorico, historialPrecios, fechaCreacion, fechaUltimaActualizacion = null, disponibilidad = null, porcentajeDescuento = null, vendedor = null, categoria = null, valoraciones = {puntuacion: null, numeroReviews: null}) {
+    this.url = url;
+    this.nombre = nombre;
+    this.precioActual = precioActual;
+    this.precioMinimoHistorico = precioMinimoHistorico;
+    this.precioDeseado = precioDeseado;
+    this.historialPrecios = historialPrecios || [];
+    this.fechaCreacion = fechaCreacion || new Date();
+    this.fechaUltimaActualizacion = fechaUltimaActualizacion;
+    this.elementoWeb = {
+      nombre: elementoWeb.nombre,
+      precio: elementoWeb.precio
+    };
+    this.disponibilidad = disponibilidad;
+    this.porcentajeDescuento = porcentajeDescuento;
+    this.vendedor = vendedor;
+    this.categoria = categoria;
+    this.valoraciones = valoraciones;
+  }
+}
+
+module.exports = Producto;
\ No newline at end of file
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..8fd576d
--- /dev/null
+++ b/package.json
@@ -0,0 +1,20 @@
+{
+  "name": "chollometro2",
+  "version": "1.0.0",
+  "description": "Nombre pendiente",
+  "main": "index.js",
+  "scripts": {},
+  "keywords": [
+    "openwhisk",
+    "rastreador",
+    "precios",
+    "ofertas"
+  ],
+  "author": "SIF",
+  "license": "No se, abstenganse abogados",
+  "dependencies": {
+    "cheerio": "^1.0.0-rc.12",
+    "mongodb": "^6.3.0",
+    "node-fetch": "^2.6.1"
+  }
+} 
\ No newline at end of file
diff --git a/utilidades/base_de_datos.js b/utilidades/base_de_datos.js
new file mode 100644
index 0000000..140313d
--- /dev/null
+++ b/utilidades/base_de_datos.js
@@ -0,0 +1,45 @@
+const { MongoClient } = require('mongodb');
+const Producto = require('../modelos/producto');
+
+const uri = process.env.MONGO_URL || 'mongodb://localhost:27017';
+const client = new MongoClient(uri);
+const dbName = 'chollometro2';
+
+async function conectar() {
+  try {
+    await client.connect();
+    console.log('Conectado a la base de datos');
+  } catch (error) {
+    console.error('Error al conectar a la base de datos:', error);
+    throw error;
+  }
+}
+
+async function getPrecios() {
+  try {
+    const db = client.db(dbName);
+    const coleccionProductos = db.collection('productos');
+    const productos = await coleccionProductos.find({}).toArray();
+    return productos;
+  } catch (error) {
+    console.error('Error al obtener los productos:', error);
+    throw error;
+  }
+}
+
+async function agregarProducto(producto) {
+  try {
+    const db = client.db(dbName);
+    const coleccionProductos = db.collection('productos');
+    await coleccionProductos.insertOne(producto);
+  } catch (error) {
+    console.error('Error al agregar el producto:', error);
+    throw error;
+  }
+}
+
+module.exports = {
+  conectar,
+  getPrecios,
+  agregarProducto,
+}; 
\ No newline at end of file
diff --git a/utilidades/scraper.js b/utilidades/scraper.js
new file mode 100644
index 0000000..6069aed
--- /dev/null
+++ b/utilidades/scraper.js
@@ -0,0 +1,23 @@
+const cheerio = require('cheerio');
+const fetch = require('node-fetch');
+
+async function extraerInfoProducto(url, elementoWeb) {
+  try {
+    const response = await fetch(url);
+    const body = await response.text();
+    const $ = cheerio.load(body);
+
+    const nombre = $(elementoWeb.nombre).text().trim();
+    const precioTexto = $(elementoWeb.precio).text().trim();
+    const precio = parseFloat(precioTexto.replace(/[^0-9,.]/g, '').replace(',', '.'));
+
+    return { nombre, precio };
+  } catch (error) {
+    console.error('Error al extraer la información del producto:', error);
+    throw error;
+  }
+}
+
+module.exports = {
+  extraerInfoProducto,
+}; 
\ No newline at end of file
diff --git a/wsk.exe b/wsk.exe
new file mode 100644
index 0000000..b67a232
Binary files /dev/null and b/wsk.exe differ
